Unparsed: 96

2
Give me all cosmonauts.

 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Astronaut . 
	?uri dbo:nationality res:Russia . 
} 



Nodes:
	1,Give		2,me		3,all		4,cosmonauts	
Edges:
	2,iobj		3,det		4,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	
Head node: 1


DUDES:
Node#1 DUDE: 4
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2

URIS:
Node#1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/IceHockeyPlayer
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.475


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/IceHockeyPlayer> .}


===========================================================
7
Give me all professional skateboarders from Sweden.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:occupation res:Skateboarding . 
       ?uri dbo:birthPlace res:Sweden . 
      
} 



Nodes:
	1,Give		2,me		3,all		4,professional		5,skateboarders		6,from		7,Sweden	
Edges:
	2,iobj		3,det		4,amod		5,dobj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/occupation###http://dbpedia.org/resource/Professional
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Sweden

Expansions:

Origin node


Slots: 


Score: 0.6666549625468166


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/occupation>  <http://dbpedia.org/resource/Professional> ;
         ?p                    <http://dbpedia.org/resource/Sweden> .
  }


===========================================================
12
What is the total amount of men and women serving in the FDNY?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?num 
WHERE { 
        res:New_York_City_Fire_Department dbp:employees ?num . 
} 



Nodes:
	1,What		2,is		3,the		4,total		5,amount		6,of		7,men		8,and		9,women		10,serving		11,in		12,the		13,FDNY	
Edges:
	1,dobj		2,aux		3,det		4,amod		5,nsubj		6,case		7,nmod		8,cc		9,conj		11,case		12,det		13,nmod	

Parse Tree:
 (1,10)	 (2,10)	 (3,5)	 (4,5)	 (5,10)	 (6,7)	 (7,5)	 (8,7)	 (9,7)	 (11,13)	 (12,13)	 (13,10)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
21
Give me all people that were born in Vienna and died in Berlin.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:birthPlace res:Vienna . 
        ?uri dbo:deathPlace res:Berlin . 
} 



Nodes:
	1,Give		2,me		3,all		4,people		5,that		6,were		7,born		8,in		9,Vienna		10,and		11,died		12,in		13,Berlin	
Edges:
	2,iobj		3,det		4,dobj		5,nsubjpass		6,auxpass		7,acl:relcl		8,case		9,nmod		10,cc		11,conj		12,case		13,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	 (10,1)	 (11,1)	 (12,13)	 (13,11)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/birthPlace
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.475


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/birthPlace>  ?v2 .}


===========================================================
34
What is the birth name of Angela Merkel?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?string 
WHERE { 
        res:Angela_Merkel dbp:birthName ?string . 
} 



Nodes:
	1,What		2,is		3,the		4,birth		5,name		6,of		7,Angela		8,Merkel	
Edges:
	2,cop		3,det		4,compound		5,nsubj		6,case		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
37
Give me all Australian nonprofit organizations.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:type res:Nonprofit_organization . 
       ?uri dbo:locationCountry res:Australia . 
       
} 



Nodes:
	1,Give		2,me		3,all		4,Australian		5,nonprofit		6,organizations	
Edges:
	2,iobj		3,det		4,amod		5,amod		6,dobj	

Parse Tree:
 (2,1)	 (3,6)	 (4,6)	 (5,6)	 (6,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Nonprofit_organization
Node#6 http://dbpedia.org/ontology/locationCountry

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 5 Argument: 2
Node: 6 Argument: 1


Score: 0.6477272727272727


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Nonprofit_organization> .
    ?v1  <http://dbpedia.org/ontology/locationCountry>  ?v4 .
  }


===========================================================
38
In which military conflicts did Lawrence of Arabia participate?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:T._E._Lawrence dbo:battle ?uri . 
} 



Nodes:
	1,In		2,which		3,military		4,conflicts		5,did		6,Lawrence		7,of		8,Arabia		9,participate	
Edges:
	1,case		2,det		3,amod		4,nmod		5,aux		6,nsubj		7,case		8,nmod	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,9)	 (5,9)	 (6,9)	 (7,8)	 (8,6)	
Head node: 9


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
48
Which countries are connected by the Rhine?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Rhine dbp:country ?string .  
        ?uri rdf:type dbo:Country .  
        ?uri rdfs:label ?string . 
} 



Nodes:
	1,Which		2,countries		3,are		4,connected		5,by		6,the		7,Rhine	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,det		7,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 0
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Country
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.5365853658536586


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Country> .}


===========================================================
50
In which UK city are the headquarters of the MI6?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE { 
        res:Secret_Intelligence_Service dbo:headquarter ?uri . 
        ?uri dbo:country res:United_Kingdom . 
}  



Nodes:
	1,In		2,which		3,UK		4,city		5,are		6,the		7,headquarters		8,of		9,the		10,MI6	
Edges:
	1,case		2,det		3,compound		4,nmod		6,det		7,nsubj		8,case		9,det		10,nmod	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,5)	 (6,7)	 (7,5)	 (8,10)	 (9,10)	 (10,7)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/headquarter
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/country
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 2
Node: 10 Argument: 1


Score: 0.7125


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/headquarter>  ?v4 .
    ?v4  <http://dbpedia.org/ontology/country>  ?v5 .
  }


===========================================================
55
What is the ruling party in Lisbon?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Lisbon dbp:leaderParty ?uri . 
} 



Nodes:
	1,What		2,is		3,the		4,ruling		5,party		6,in		7,Lisbon	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
60
What is the time zone of Salt Lake City?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Salt_Lake_City dbp:timezone ?uri . 
} 



Nodes:
	1,What		2,is		3,the		4,time		5,zone		6,of		7,Salt		8,Lake		9,City	
Edges:
	2,cop		3,det		4,compound		5,nsubj		6,case		7,compound		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
69
Which ships were called after Benjamin Franklin?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbp:shipNamesake res:Benjamin_Franklin . 
} 



Nodes:
	1,Which		2,ships		3,were		4,called		5,after		6,Benjamin		7,Franklin	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,compound		7,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 5
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Benjamin_Franklin

Expansions:

Origin node


Slots: 


Score: 0.5685589519650656


SELECT  ?v1
WHERE
  { ?v1  ?p  <http://dbpedia.org/resource/Benjamin_Franklin> .}


===========================================================
70
Who are the parents of the wife of Juan Carlos I?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Juan_Carlos_I_of_Spain dbo:spouse ?x . 
        ?x dbo:parent ?uri . 
} 



Nodes:
	1,Who		2,are		3,the		4,parents		5,of		6,the		7,wife		8,of		9,Juan		10,Carlos		11,I	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,det		7,nmod		8,case		9,compound		10,nmod		11,nsubj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,10)	 (9,10)	 (10,7)	 (11,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/parent
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/parent>  ?v2 .}


===========================================================
72
Did Tesla win a nobel prize in physics?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
ASK 
WHERE { 
        res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics . 
} 



Nodes:
	1,Did		2,Tesla		3,win		4,a		5,nobel		6,prize		7,in		8,physics	
Edges:
	1,aux		2,nsubj		4,det		5,amod		6,dobj		7,case		8,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	 (7,8)	 (8,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 4
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/award###http://dbpedia.org/resource/Drue_Heinz_Literature_Prize
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.525


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/award>  <http://dbpedia.org/resource/Drue_Heinz_Literature_Prize> .}


===========================================================
76
In which U.S. state is Fort Knox located?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Fort_Knox dbp:location ?uri .  
        ?uri dbo:country res:United_States . 
} 



Nodes:
	1,In		2,which		3,U.S.		4,state		5,is		6,Fort		7,Knox		8,located	
Edges:
	1,case		2,det		3,compound		4,nmod		5,cop		6,compound		7,nsubj	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,8)	 (5,8)	 (6,7)	 (7,8)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/country
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/property/location

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 4 Argument: 2


Score: 0.7125


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/country>  ?v5 .
    ?v1  <http://dbpedia.org/property/location>  ?v4 .
  }


===========================================================
79
Which Chess players died in the same place they were born in?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:ChessPlayer .  
        ?uri dbo:birthPlace ?x .  
        ?uri dbo:deathPlace ?y . 
        FILTER (?x = ?y) . 
} 



Nodes:
	1,Which		2,Chess		3,players		4,died		5,in		6,the		7,same		8,place		9,they		10,were		11,born		12,in	
Edges:
	1,dobj		2,compound		3,nsubj		4,advcl		5,case		6,det		7,amod		8,nmod		9,nsubjpass		10,auxpass		12,nmod	

Parse Tree:
 (1,4)	 (2,3)	 (3,4)	 (4,11)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,11)	 (10,11)	 (12,11)	
Head node: 11


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 1
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/ontology/deathPlace
Node#12 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 9 Argument: 2
Node: 12 Argument: 1


Score: 0.38


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/deathPlace>  ?v2 .}


===========================================================
81
Who was called Frank The Tank?

 
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbp:nickname 'Frank The Tank'@en . 
}



Nodes:
	1,Who		2,was		3,called		4,Frank		5,The		6,Tank	
Edges:
	1,nsubjpass		2,auxpass		4,compound		5,compound		6,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
83
Was Marc Chagall a jew?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
       res:Marc_Chagall dbp:ethnicity 'Jewish'@en .
}



Nodes:
	1,Was		2,Marc		3,Chagall		4,a		5,jew	
Edges:
	1,cop		2,compound		3,nsubj		4,det	

Parse Tree:
 (1,5)	 (2,3)	 (3,5)	 (4,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Marc_Chagall
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/property/ethnicity###'Jewish'@en

Expansions:

Origin node


Slots: 


Score: 0.7625


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/ethnicity>  <'Jewish'@en> ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Marc_Chagall> .
  }


===========================================================
90
How many people live in the capital of Australia?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
        res:Australia dbo:capital ?x .
        ?x dbo:populationTotal ?num .
}



Nodes:
	1,How		2,many		3,people		4,live		5,in		6,the		7,capital		8,of		9,Australia	
Edges:
	1,advmod		2,amod		3,nsubj		5,case		6,det		7,nmod		8,case		9,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/capital
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Australia

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 1


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/capital>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Australia> .
  }


===========================================================
100
What is the founding year of the brewery that produces Pilsner Urquell?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
        res:Pilsner_Urquell dbp:brewery ?uri .
        ?uri dbp:foundation ?num .
}



Nodes:
	1,What		2,is		3,the		4,founding		5,year		6,of		7,the		8,brewery		9,that		10,produces		11,Pilsner		12,Urquell	
Edges:
	2,cop		3,det		4,compound		5,nsubj		6,case		7,det		8,nmod		9,nsubj		10,acl:relcl		11,compound		12,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,8)	 (11,12)	 (12,10)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/property/brewery
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 http://dbpedia.org/resource/Pilsner_Urquell

Expansions:
Dep: 11 Head: 12

Origin expansion


Slots: 
Node: 6 Argument: 2
Node: 7 Argument: 1


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/brewery>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Pilsner_Urquell> .
  }


===========================================================
101
Who wrote the lyrics for the Polish national anthem?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Poland dbo:anthem ?x .
        ?x dbp:author ?uri .
}



Nodes:
	1,Who		2,wrote		3,the		4,lyrics		5,for		6,the		7,Polish		8,national		9,anthem	
Edges:
	1,nsubj		3,det		4,dobj		5,case		6,det		7,amod		8,amod		9,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,2)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/property/author
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 4 Argument: 1


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/author>  ?v2 .}


===========================================================
103
Who painted The Storm on the Sea of Galilee?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri .
}



Nodes:
	1,Who		2,painted		3,The		4,Storm		5,on		6,the		7,Sea		8,of		9,Galilee	
Edges:
	1,nsubj		3,det		4,dobj		5,case		6,det		7,nmod		8,case		9,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,7)	 (6,7)	 (7,2)	 (8,9)	 (9,7)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 5
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/author
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 7 Argument: 2


Score: 0.7625


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/author>  ?v4 .}


===========================================================
106
Give me the birthdays of all actors of the television show Charmed.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE { 
        res:Charmed dbo:starring ?actor .
        ?actor dbo:birthDate ?date .
}



Nodes:
	1,Give		2,me		3,the		4,birthdays		5,of		6,all		7,actors		8,of		9,the		10,television		11,show		12,Charmed	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod		8,case		9,det		10,compound		11,compound		12,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,12)	 (9,12)	 (10,12)	 (11,12)	 (12,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/birthDate
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/birthDate>  ?v2 .}


===========================================================
108
Which states border Illinois?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri 
WHERE {
        res:Illinois dbp:borderingstates ?uri .
}



Nodes:
	1,Which		2,states		3,border		4,Illinois	
Edges:
	1,det		2,nsubj		4,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
114
Was U.S. president Jackson involved in a war?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
        res:Andrew_Jackson dbo:battle ?battle .    
}



Nodes:
	1,Was		2,U.S.		3,president		4,Jackson		5,involved		6,in		7,a		8,war	
Edges:
	1,auxpass		2,compound		3,nsubjpass		4,dobj		6,case		7,det		8,nmod	

Parse Tree:
 (1,5)	 (2,3)	 (3,5)	 (4,5)	 (6,8)	 (7,8)	 (8,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 p

Expansions:

Origin slot


Slots: 
Node: 6 Argument: 2
Node: 8 Argument: 1


Score: 0.08843930635838157


ASK
WHERE
  { ?v1  ?p  ?v2 .}


===========================================================
117
Who is the daughter of Robert Kennedy married to?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Robert_F._Kennedy dbo:child ?child .
        ?child dbo:spouse ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,daughter		5,of		6,Robert		7,Kennedy		8,married		9,to	
Edges:
	1,dep		2,auxpass		3,det		4,nsubjpass		5,case		6,compound		7,nmod		9,xcomp	

Parse Tree:
 (1,8)	 (2,8)	 (3,4)	 (4,8)	 (5,7)	 (6,7)	 (7,4)	 (9,8)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/spouse
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/spouse>  ?v2 .}


===========================================================
121
What is the area code of Berlin?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE {
        res:Berlin dbo:areaCode ?string .
}



Nodes:
	1,What		2,is		3,the		4,area		5,code		6,of		7,Berlin	
Edges:
	2,cop		3,det		4,compound		5,nsubj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
124
Through which countries does the Yenisei river flow?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
        res:Yenisei dbo:country ?uri .
}



Nodes:
	1,Through		2,which		3,countries		4,does		5,the		6,Yenisei		7,river		8,flow	
Edges:
	1,case		2,nmod		3,nsubj		5,det		6,compound		7,compound		8,dobj	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 5
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/country
Node#8 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 2


Score: 0.7625


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/ontology/country>  ?v1 .}


===========================================================
143
Give me all federal chancellors of Germany.


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
          ?uri rdf:type dbo:Person .
         ?uri dbo:office 'Chancellor of Germany' . 
}



Nodes:
	1,Give		2,me		3,all		4,federal		5,chancellors		6,of		7,Germany	
Edges:
	2,iobj		3,det		4,amod		5,dobj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 4
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Presenter
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.475


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Presenter> .}


===========================================================
147
List all episodes of the first season of the HBO television series The Sopranos.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbo:series res:The_Sopranos  .
        ?uri dbo:seasonNumber 1 .
}



Nodes:
	1,List		2,all		3,episodes		4,of		5,the		6,first		7,season		8,of		9,the		10,HBO		11,television		12,series		13,The		14,Sopranos	
Edges:
	2,det		3,nsubj		4,case		5,det		6,amod		7,nmod		8,case		9,det		10,compound		11,compound		12,nmod		13,det		14,xcomp	

Parse Tree:
 (2,3)	 (3,14)	 (4,7)	 (5,7)	 (6,7)	 (7,3)	 (8,12)	 (9,12)	 (10,12)	 (11,12)	 (12,7)	 (13,14)	 (14,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 1
Node#13 DUDE: 2
Node#14 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 http://dbpedia.org/ontology/series
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 10 Argument: 1
Node: 12 Argument: 2


Score: 0.475


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/series>  ?v2 .}


===========================================================
149
Give me all people with first name Jimmy.


PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type foaf:Person .  
        ?uri foaf:givenName 'Jimmy'@en .
}



Nodes:
	1,Give		2,me		3,all		4,people		5,with		6,first		7,name		8,Jimmy	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,amod		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/MotorRace
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.475


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/MotorRace> .}


===========================================================
151
Is there a video game called Battle Chess?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
ASK 
WHERE {
        ?uri rdf:type dbo:VideoGame .
        ?uri rdfs:label 'Battle Chess'@en .
}



Nodes:
	1,Is		2,there		3,a		4,video		5,game		6,called		7,Battle		8,Chess	
Edges:
	2,expl		3,det		4,compound		5,nsubj		6,acl		7,compound		8,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,5)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/VideoGame
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.6885245901639345


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/VideoGame> .}


===========================================================
160
Was the wife of president Lincoln called Mary?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
ASK 
WHERE {
        res:Abraham_Lincoln dbo:spouse ?spouse .
        ?spouse rdfs:label ?name .
        FILTER(regex(?name,'Mary')) 
}



Nodes:
	1,Was		2,the		3,wife		4,of		5,president		6,Lincoln		7,called		8,Mary	
Edges:
	2,det		3,nsubj		4,dep		5,dep		6,nsubj		7,dep		8,dobj	

Parse Tree:
 (2,3)	 (3,1)	 (4,5)	 (5,7)	 (6,7)	 (7,1)	 (8,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/spouse
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Abraham_Lincoln
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 0.5365853658536586


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/spouse>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Abraham_Lincoln> .
  }


===========================================================
166
Who was the 16th president of the United States?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
         ?uri dbo:office 'President of the United States' .
         ?uri dbo:orderInOffice '16th' .
}



Nodes:
	1,Who		2,was		3,the		4,16th		5,president		6,of		7,the		8,United		9,States	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,det		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 5

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/office###President
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 9 Argument: 1


Score: 0.5300802139037433


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/office>  <President> .}


===========================================================
168
Which music albums contain the song Last Christmas?


PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri 
WHERE {
        ?single dbo:album ?uri .
        ?single rdfs:label 'Last Christmas'@en .
}



Nodes:
	1,Which		2,music		3,albums		4,contain		5,the		6,song		7,Last		8,Christmas	
Edges:
	1,det		2,compound		3,nsubj		5,det		6,dobj		7,amod		8,nmod:tmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,6)	 (6,4)	 (7,8)	 (8,6)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/album
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 6 Argument: 2
Node: 8 Argument: 1


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/album>  ?v2 .}


===========================================================
172
Give me all Canadian Grunge record labels.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:RecordLabel .
        ?uri dbo:genre res:Grunge .
        ?uri dbo:country res:Canada .
}



Nodes:
	1,Give		2,me		3,all		4,Canadian		5,Grunge		6,record		7,labels	
Edges:
	2,iobj		3,det		4,amod		5,compound		6,compound		7,dobj	

Parse Tree:
 (2,1)	 (3,7)	 (4,7)	 (5,7)	 (6,7)	 (7,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 4
Node#5 DUDE: 4
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Canada
Node#5 http://dbpedia.org/resource/Grunge
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/RecordLabel

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 1


Score: 0.7135975135975136


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Grunge> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/RecordLabel> ;
         ?p                    <http://dbpedia.org/resource/Canada> .
  }


===========================================================
186
Was Natalie Portman born in the United States?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE { 
         res:Natalie_Portman dbo:birthPlace res:United_States . 
}



Nodes:
	1,Was		2,Natalie		3,Portman		4,born		5,in		6,the		7,United		8,States	
Edges:
	1,auxpass		2,compound		3,nsubjpass		5,case		6,det		7,compound		8,nmod	

Parse Tree:
 (1,4)	 (2,3)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Natalie_Portman
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/birthPlace
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 1 Argument: 1
Node: 8 Argument: 2


Score: 0.7625


ASK
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Natalie_Portman> ;
         <http://dbpedia.org/ontology/birthPlace>  ?v2 .
  }


===========================================================
188
Who was the first to climb Mount Everest?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri
WHERE {
          res:Mount_Everest dbo:firstAscentPerson ?uri . 
}



Nodes:
	1,Who		2,was		3,the		4,first		5,to		6,climb		7,Mount		8,Everest	
Edges:
	2,cop		3,det		4,nsubj		5,mark		6,acl		7,compound		8,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
190
What is the official color of the University of Oxford?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string
WHERE {
        res:University_of_Oxford dbo:officialSchoolColour ?string . 
}



Nodes:
	1,What		2,is		3,the		4,official		5,color		6,of		7,the		8,University		9,of		10,Oxford	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,det		8,nmod		9,case		10,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,8)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
191
To which artistic movement did the painter of The Three Dancers belong?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri
WHERE {
         res:The_Three_Dancers dbo:author ?person .
         ?person dbo:movement ?uri .
}



Nodes:
	1,To		2,which		3,artistic		4,movement		5,did		6,the		7,painter		8,of		9,The		10,Three		11,Dancers		12,belong	
Edges:
	1,case		2,det		3,amod		4,nmod		5,aux		6,det		7,nsubj		8,case		9,det		10,nummod		11,nmod	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,12)	 (5,12)	 (6,7)	 (7,12)	 (8,11)	 (9,11)	 (10,11)	 (11,7)	
Head node: 12


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 http://dbpedia.org/ontology/movement

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1
Node: 7 Argument: 2


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/movement>  ?v2 .}


===========================================================
200
What is the most frequent cause of death?


PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?x
WHERE {
        ?uri dbo:deathCause ?x . 
}
ORDER BY DESC(COUNT(DISTINCT ?uri)) 
OFFSET 0 LIMIT 1



Nodes:
	1,What		2,is		3,the		4,most		5,frequent		6,cause		7,of		8,death	
Edges:
	2,cop		3,det		4,advmod		5,amod		6,nsubj		7,case		8,nmod	

Parse Tree:
 (2,1)	 (3,6)	 (4,5)	 (5,6)	 (6,1)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
204
Give me all taikonauts.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Astronaut .
        ?uri dbo:nationality res:China .
}



Nodes:
	1,Give		2,me		3,all		4,taikonauts	
Edges:
	2,iobj		3,det		4,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	
Head node: 1


DUDES:
Node#1 DUDE: 4
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2

URIS:
Node#1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/River
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.475


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/River> .}


===========================================================
205
How many pages does War and Peace have?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?n
WHERE {
        res:War_and_Peace dbo:numberOfPages ?n .
}



Nodes:
	1,How		2,many		3,pages		4,does		5,War		6,and		7,Peace		8,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,nsubj		6,cc		7,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (3,8)	 (4,8)	 (5,8)	 (6,5)	 (7,8)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/numberOfPages

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 0.7125


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/numberOfPages>  ?v2 .}


===========================================================
214
When is Halloween?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date
WHERE {
        res:Halloween dbp:date ?date . 
}



Nodes:
	1,When		2,is		3,Halloween	
Edges:
	1,advmod		3,nsubj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
220
What does IYCM stand for?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:abbreviation 'IYCM' .
}



Nodes:
	1,What		2,does		3,IYCM		4,stand		5,for	
Edges:
	1,nmod		2,aux		3,nsubj		5,case	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (5,1)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
221
What was Brazil's lowest rank in the FIFA World Ranking?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?n
WHERE {
        res:Brazil_national_football_team dbp:fifaMin ?n .
}



Nodes:
	1,What		2,was		3,Brazil		4,'s		5,lowest		6,rank		7,in		8,the		9,FIFA		10,World		11,Ranking	
Edges:
	2,cop		3,nmod:poss		4,case		5,amod		6,nsubj		7,case		8,det		9,compound		10,compound		11,nmod	

Parse Tree:
 (2,1)	 (3,6)	 (4,3)	 (5,6)	 (6,1)	 (7,11)	 (8,11)	 (9,11)	 (10,11)	 (11,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
231
Give me all Australian metalcore bands.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Band .
        ?uri dbo:genre res:Metalcore .
      ?uri dbo:hometown res:Australia . 
}



Nodes:
	1,Give		2,me		3,all		4,Australian		5,metalcore		6,bands	
Edges:
	2,iobj		3,det		4,amod		5,compound		6,dobj	

Parse Tree:
 (2,1)	 (3,6)	 (4,6)	 (5,6)	 (6,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 4
Node#5 DUDE: 4
Node#6 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Australia
Node#5 http://dbpedia.org/resource/Metalcore
Node#6 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Band

Expansions:

Origin node


Slots: 


Score: 0.7135975135975136


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Band> ;
         ?p                    <http://dbpedia.org/resource/Metalcore> ;
         ?p                    <http://dbpedia.org/resource/Australia> .
  }


===========================================================
233
When was Carlo Giuliani shot?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date
WHERE {
        res:Death_of_Carlo_Giuliani dbp:dateOfDeath ?date .
}



Nodes:
	1,When		2,was		3,Carlo		4,Giuliani		5,shot	
Edges:
	1,advmod		3,compound		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (3,5)	 (4,5)	 (5,2)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/property/dateOfDeath

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 5 Argument: 2


Score: 0.7625


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/property/dateOfDeath>  ?v1 .}


===========================================================
235
Which companies have more than 1 million employees?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
         ?uri rdf:type dbo:Company .
        ?uri dbo:numberOfEmployees ?n . 
       FILTER ( ?n > 1000000 ) } 



Nodes:
	1,Which		2,companies		3,have		4,more		5,than		6,1		7,million		8,employees	
Edges:
	1,dobj		2,nsubj		4,advmod		5,mwe		6,compound		7,nummod		8,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (4,7)	 (5,4)	 (6,7)	 (7,8)	 (8,3)	
Head node: 3


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Company
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1


Score: 0.5365853658536586


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Company> .}


===========================================================
237
Who was called Rodzilla?


PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
         ?uri dbp:nickname "Rodzilla"@en .
}



Nodes:
	1,Who		2,was		3,called		4,Rodzilla	
Edges:
	1,nsubjpass		2,auxpass		4,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (4,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
245
What country is Mount Everest in?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        res:Mount_Everest dbo:locatedInArea ?uri . 
        ?uri rdf:type dbo:Country .
}



Nodes:
	1,What		2,country		3,is		4,Mount		5,Everest		6,in	
Edges:
	1,det		2,nsubj		4,compound		5,nsubj		6,dep	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	 (6,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Country
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.6885245901639345


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Country> .}


===========================================================
258
Who is the mayor of the capital of French Polynesia?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        res:French_Polynesia dbo:capital ?x .
        ?x dbo:mayor ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,mayor		5,of		6,the		7,capital		8,of		9,French		10,Polynesia	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,det		7,nmod		8,case		9,amod		10,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,10)	 (9,10)	 (10,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/mayor
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1


Score: 0.6333333333333334


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/mayor>  ?v2 .}


===========================================================
264
What is the total population of Melbourne, Florida?


PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT ?uri 
WHERE { 
        <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri .
}



Nodes:
	1,What		2,is		3,the		4,total		5,population		6,of		7,Melbourne		9,Florida	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,9)	 (7,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
274
From which region is the Melon de Bourgogne?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri
WHERE {
        res:Melon_de_Bourgogne dbo:wineRegion ?uri .
}



Nodes:
	1,From		2,which		3,region		4,is		5,the		6,Melon		7,de		8,Bourgogne	
Edges:
	1,mark		2,dobj		3,nsubj		4,cop		5,det		6,compound		7,amod	

Parse Tree:
 (1,8)	 (2,8)	 (3,8)	 (4,8)	 (5,8)	 (6,8)	 (7,8)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
276
Who was president of Pakistan in 1978?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbp:title res:President_of_Pakistan .
        ?uri dbp:years 1978 .
}



Nodes:
	1,Who		2,was		3,president		4,of		5,Pakistan		6,in		7,1978	
Edges:
	2,cop		3,nsubj		4,case		5,nmod		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,1)	 (4,5)	 (5,3)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/property/title###http://dbpedia.org/resource/President_of_Pakistan
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:
Dep: 4 Head: 3
Dep: 5 Head: 3

Origin slot


Slots: 
Node: 2 Argument: 1


Score: 0.6885245901639345


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/property/title>  <http://dbpedia.org/resource/President_of_Pakistan> .}


===========================================================
280
What is the largest metropolitan area in Washington state?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri
WHERE {
        <http://dbpedia.org/resource/Washington_(state)> dbp:largestmetro ?uri .
}



Nodes:
	1,What		2,is		3,the		4,largest		5,metropolitan		6,area		7,in		8,Washington		9,state	
Edges:
	2,cop		3,det		4,amod		5,amod		6,nsubj		7,case		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,6)	 (4,6)	 (5,6)	 (6,1)	 (7,9)	 (8,9)	 (9,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
281
Where in France is sparkling wine produced?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:wineProduced res:Sparkling_wine .
        ?uri dbo:location res:France .
}



Nodes:
	1,Where		2,in		3,France		4,is		5,sparkling		6,wine		7,produced	
Edges:
	1,advmod		2,case		3,nmod		4,auxpass		5,amod		6,nsubjpass	

Parse Tree:
 (1,7)	 (2,3)	 (3,1)	 (4,7)	 (5,6)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 5
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/France
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Sparkling_wine
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.5685589519650656


SELECT  ?v1
WHERE
  { ?v1  ?p  <http://dbpedia.org/resource/France> ;
         ?p  <http://dbpedia.org/resource/Sparkling_wine> .
  }


===========================================================
285
Wo has vice president under the president who authorized atomic weapons against Japan during World War II?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?x text:"authorized" text:"atomic weapons against Japan" .
        ?x dbo:vicePresident ?uri .
}



Nodes:
	1,Wo		2,has		3,vice		4,president		5,under		6,the		7,president		8,who		9,authorized		10,atomic		11,weapons		12,against		13,Japan		14,during		15,World		16,War		17,II	
Edges:
	1,csubj		3,compound		4,dobj		5,case		6,det		7,nmod		8,nsubj		9,acl:relcl		10,amod		11,dobj		12,case		13,nmod		14,case		15,compound		16,compound		17,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	 (10,11)	 (11,9)	 (12,13)	 (13,9)	 (14,17)	 (15,17)	 (16,17)	 (17,9)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2
Node#16 DUDE: 2
Node#17 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING
Node#16 EMPTY_STRING
Node#17 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
286
In which town was the assassin of Martin Luther King born?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Martin_Luther_King,_Jr. text:"assassin" ?x . 
        ?x dbo:birthPlace ?uri .
        ?uri dbp:districtType "Township"@en .
}



Nodes:
	1,In		2,which		3,town		4,was		5,the		6,assassin		7,of		8,Martin		9,Luther		10,King		11,born	
Edges:
	1,case		2,det		3,nmod		4,auxpass		5,det		6,nsubjpass		7,case		8,compound		9,compound		10,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,11)	 (4,11)	 (5,6)	 (6,11)	 (7,10)	 (8,10)	 (9,10)	 (10,6)	
Head node: 11


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
287
Which anti-apartheid activist was born in Mvezo?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type text:"anti-apartheid activist" .
        ?uri dbo:birthPlace res:Mvezo .
}



Nodes:
	1,Which		2,anti-apartheid		3,activist		4,was		5,born		6,in		7,Mvezo	
Edges:
	1,det		2,amod		3,nsubjpass		4,auxpass		6,case		7,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,5)	 (4,5)	 (6,7)	 (7,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
288
How many Golden Globe awards did the daughter of Henry Fonda win?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?n
WHERE {
        ?uri dbo:parent res:Henry_Fonda .
        ?uri text:"number of Golden Globe awards" ?n .
}



Nodes:
	1,How		2,many		3,Golden		4,Globe		5,awards		6,did		7,the		8,daughter		9,of		10,Henry		11,Fonda		12,win	
Edges:
	1,advmod		2,amod		3,compound		4,dobj		5,dep		6,aux		7,det		8,nsubj		9,case		10,compound		11,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (4,12)	 (5,4)	 (6,12)	 (7,8)	 (8,12)	 (9,11)	 (10,11)	 (11,8)	
Head node: 12


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
289
Which recipients of the Victoria Cross died in the Battle of Arnhem?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
    ?uri dbo:award res:Victoria_Cross .
    ?uri text:"died in" text:"Battle of Arnhem" .
}



Nodes:
	1,Which		2,recipients		3,of		4,the		5,Victoria		6,Cross		7,died		8,in		9,the		10,Battle		11,of		12,Arnhem	
Edges:
	1,det		2,nsubj		3,case		4,det		5,compound		6,nmod		8,case		9,det		10,nmod		11,case		12,nmod	

Parse Tree:
 (1,2)	 (2,7)	 (3,6)	 (4,6)	 (5,6)	 (6,2)	 (8,10)	 (9,10)	 (10,7)	 (11,12)	 (12,10)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
290
Where did the first man in space die?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        ?x text:"is" text:"first man in space" .
        ?x dbo:deathPlace ?uri .
}



Nodes:
	1,Where		2,did		3,the		4,first		5,man		6,in		7,space		8,die	
Edges:
	1,advmod		2,aux		3,det		4,amod		5,nsubj		6,case		7,nmod	

Parse Tree:
 (1,8)	 (2,8)	 (3,5)	 (4,5)	 (5,8)	 (6,7)	 (7,5)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
291
How old was Steve Jobs' sister when she first met him?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?n 
WHERE {
        res:Steve_Jobs dbo:relative ?uri .
        ?uri text:"first met him when she was" ?n .
}



Nodes:
	1,How		2,old		3,was		4,Steve		5,Jobs		6,'		7,sister		8,when		9,she		10,first		11,met		12,him	
Edges:
	1,advmod		2,dep		4,compound		5,nmod:poss		6,case		7,nsubj		8,advmod		9,nsubj		10,advmod		11,acl:relcl		12,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,7)	 (6,5)	 (7,3)	 (8,11)	 (9,11)	 (10,11)	 (11,7)	 (12,11)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
292
Which members of the Wu-Tang Clan took their stage name from a movie?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        res:Wu-Tang_Clan dbo:bandMember ?uri .
        ?uri text:"stage name" ?x .
        ?x text:"from" text:"movie" .
}



Nodes:
	1,Which		2,members		3,of		4,the		5,Wu-Tang		6,Clan		7,took		8,their		9,stage		10,name		11,from		12,a		13,movie	
Edges:
	1,det		2,nsubj		3,case		4,det		5,compound		6,nmod		8,nmod:poss		9,compound		10,dobj		11,case		12,det		13,nmod	

Parse Tree:
 (1,2)	 (2,7)	 (3,6)	 (4,6)	 (5,6)	 (6,2)	 (8,10)	 (9,10)	 (10,7)	 (11,13)	 (12,13)	 (13,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
293
Which writers had influenced the philosopher that refused a Nobel Prize?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?x rdf:type dbo:Philosopher .
        ?x text:"refuse" text:"Nobel Prize" .
        ?x dbo:influencedBy ?uri .
        ?uri rdf:type dbo:Writer .
}



Nodes:
	1,Which		2,writers		3,had		4,influenced		5,the		6,philosopher		7,that		8,refused		9,a		10,Nobel		11,Prize	
Edges:
	1,det		2,nsubj		3,aux		5,det		6,dobj		7,nsubj		8,acl:relcl		9,det		10,compound		11,dobj	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,6)	 (6,4)	 (7,8)	 (8,6)	 (9,11)	 (10,11)	 (11,8)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
294
Under which king did the British prime minister that signed the Munich agreement serve?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri 
WHERE {
        ?x rdf:type yago:PrimeMinistersOfTheUnitedKingdom .
        ?x text:"sign" text:"Munich Agreement" .
        ?x dbo:monarch ?uri .
}



Nodes:
	1,Under		2,which		3,king		4,did		5,the		6,British		7,prime		8,minister		9,that		10,signed		11,the		12,Munich		13,agreement		14,serve	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,amod		7,amod		8,nsubj		9,nsubj		10,acl:relcl		11,det		12,compound		13,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,14)	 (4,14)	 (5,8)	 (6,8)	 (7,8)	 (8,14)	 (9,10)	 (10,8)	 (11,13)	 (12,13)	 (13,10)	
Head node: 14


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
295
Who composed the music for the film that depicts the early life of Jane Austin?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?x rdf:type dbo:Film .
        ?x text:"depicts the early life of" text:"Jane Austin" .
        ?x dbo:musicComposer ?uri .
}



Nodes:
	1,Who		2,composed		3,the		4,music		5,for		6,the		7,film		8,that		9,depicts		10,the		11,early		12,life		13,of		14,Jane		15,Austin	
Edges:
	1,nsubj		3,det		4,dobj		5,case		6,det		7,nmod		8,nsubj		9,acl:relcl		10,det		11,amod		12,dobj		13,case		14,compound		15,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,7)	 (6,7)	 (7,2)	 (8,9)	 (9,7)	 (10,12)	 (11,12)	 (12,9)	 (13,15)	 (14,15)	 (15,12)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
296
Who succeeded the pope that reigned only 33 days?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?x rdf:type dbo:Pope .
        ?x text:"reign" text:"33 days" .
        ?x dbp:predecessor ?uri .
}



Nodes:
	1,Who		2,succeeded		3,the		4,pope		5,that		6,reigned		7,only		8,33		9,days	
Edges:
	1,nsubj		3,det		4,dobj		5,nsubj		6,acl:relcl		7,advmod		8,nummod		9,nmod:tmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,6)	 (6,4)	 (7,8)	 (8,9)	 (9,6)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
297
On which island did the national poet of Greece die?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri 
WHERE {
        ?x text:"considered" text:"national poet of Greece" .
        ?x dbo:deathPlace ?uri .
        ?uri rdf:type yago:Island109316454 .
}



Nodes:
	1,On		2,which		3,island		4,did		5,the		6,national		7,poet		8,of		9,Greece		10,die	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,amod		7,nsubj		8,case		9,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,10)	 (4,10)	 (5,7)	 (6,7)	 (7,10)	 (8,9)	 (9,7)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
298
Which horses did The Long Fellow ride?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?x text:"known as" text:"The Long Fellow" .
        ?x dbo:raceHorse ?uri .
}



Nodes:
	1,Which		2,horses		3,did		4,The		5,Long		6,Fellow		7,ride	
Edges:
	1,det		2,nsubj		4,det		5,amod		6,compound		7,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,7)	 (5,7)	 (6,7)	 (7,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
299
Of the people that died of radiation in Los Alamos, whose death was an accident?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?rui dbo:deathPlace <http://dbpedia.org/resource/Los_Alamos,_New_Mexico> .
        ?uri dbo:deathCause res:Acute_radiation_syndrome .
        ?uri text:"death circumstance" text:"accident" .
}



Nodes:
	1,Of		2,the		3,people		4,that		5,died		6,of		7,radiation		8,in		9,Los		10,Alamos		12,whose		13,death		14,was		15,an		16,accident	
Edges:
	1,case		2,det		4,nsubj		5,acl:relcl		6,case		7,nmod		8,case		9,compound		10,nmod		12,dep		13,nsubj		14,cop		15,det		16,dep	

Parse Tree:
 (1,3)	 (2,3)	 (4,5)	 (5,3)	 (6,7)	 (7,5)	 (8,10)	 (9,10)	 (10,5)	 (12,16)	 (13,16)	 (14,16)	 (15,16)	 (16,10)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2
Node#16 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING
Node#16 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
300
Which building owned by the Bank of America was featured in the TV series MegaStructures?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?uri 
WHERE {
        ?uri rdf:type dbo:Building.
        ?uri dbo:owner res:Bank_of_America . 
        ?uri text:"featured in" text:"MegaStructures" .
}



Nodes:
	1,Which		2,building		3,owned		4,by		5,the		6,Bank		7,of		8,America		9,was		10,featured		11,in		12,the		13,TV		14,series		15,MegaStructures	
Edges:
	1,det		2,nsubj		4,case		5,det		6,nmod		7,case		8,nmod		9,auxpass		10,acl:relcl		11,case		12,det		13,compound		14,compound		15,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	 (7,8)	 (8,6)	 (9,10)	 (10,8)	 (11,15)	 (12,15)	 (13,15)	 (14,15)	 (15,10)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
301
Which buildings in art deco style did Shreve, Lamb and Harmon design?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbo:architect <http://dbpedia.org/resource/Shreve,_Lamb_&_Harmon> .
       ?uri dbo:architecturalStyle res:Art_Deco .  
}



Nodes:
	1,Which		2,buildings		3,in		4,art		5,deco		6,style		7,did		8,Shreve		10,Lamb		11,and		12,Harmon		13,design	
Edges:
	1,det		2,nsubj		3,case		4,compound		5,compound		6,nmod		8,nsubj		10,nsubj		11,cc		12,nsubj		13,xcomp	

Parse Tree:
 (1,2)	 (2,7)	 (3,6)	 (4,6)	 (5,6)	 (6,2)	 (8,13)	 (10,13)	 (11,8)	 (12,13)	 (13,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/architect
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Art_Deco
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:
Dep: 4 Head: 6
Dep: 5 Head: 6

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 6 Argument: 2


Score: 0.6477272727272727


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Art_Deco> .
    ?v1  <http://dbpedia.org/ontology/architect>  ?v4 .
  }


===========================================================
302
Which birds are protected under the National Parks and Wildlife Act?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
    ?uri rdf:type dbo:Bird .    
    ?uri text:"protected under" text:"National Parks and Wildlife Act".
}



Nodes:
	1,Which		2,birds		3,are		4,protected		5,under		6,the		7,National		8,Parks		9,and		10,Wildlife		11,Act	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,det		7,compound		8,nmod		9,cc		10,compound		11,conj	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,8)	 (10,11)	 (11,8)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
303
Which country did the first known photographer of snowflakes come from?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?uri text:"is" text:"first known photographer of snowflakes" .
        ?uri dbo:birthPlace ?x .
        ?x rdf:type dbo:Country .   
}



Nodes:
	1,Which		2,country		3,did		4,the		5,first		6,known		7,photographer		8,of		9,snowflakes		10,come		11,from	
Edges:
	1,det		2,nmod		3,aux		4,det		5,amod		6,amod		7,nsubj		8,case		9,nmod		11,case	

Parse Tree:
 (1,2)	 (2,10)	 (3,10)	 (4,7)	 (5,7)	 (6,7)	 (7,10)	 (8,9)	 (9,7)	 (11,2)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
304
List all the battles commanded by the lover of Cleopatra.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
    ?x text:"lover" text:"Cleopatra".   
    ?uri dbo:commander ?x .
}



Nodes:
	1,List		2,all		3,the		4,battles		5,commanded		6,by		7,the		8,lover		9,of		10,Cleopatra	
Edges:
	2,det:predet		3,det		4,dobj		5,acl		6,case		7,det		8,nmod		9,case		10,nmod	

Parse Tree:
 (2,4)	 (3,4)	 (4,1)	 (5,4)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,8)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
306
Which actress starring in the TV series Friends owns the production company Coquette Productions?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
    res:Friends dbo:starring ?uri . 
    ?uri text:"own" text:"the production company Coquette Productions" .
}



Nodes:
	1,Which		2,actress		3,starring		4,in		5,the		6,TV		7,series		8,Friends		9,owns		10,the		11,production		12,company		13,Coquette		14,Productions	
Edges:
	1,det		2,nsubj		4,case		5,det		6,compound		7,nmod		8,nsubj		9,acl:relcl		10,det		11,compound		12,compound		13,compound		14,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,7)	 (5,7)	 (6,7)	 (7,3)	 (8,9)	 (9,7)	 (10,14)	 (11,14)	 (12,14)	 (13,14)	 (14,9)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
307
Gaborone is the capital of which country member of the African Union?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
    ?uri text:"member of" text:"African Union" .    
    ?uri dbo:capital res:Gaborone .
}



Nodes:
	1,Gaborone		2,is		3,the		4,capital		5,of		6,which		7,country		8,member		9,of		10,the		11,African		12,Union	
Edges:
	1,nsubj		2,cop		3,det		5,case		6,det		7,compound		8,nmod		9,case		10,det		11,compound		12,nmod	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,12)	 (10,12)	 (11,12)	 (12,8)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
308
When was the composer of the opera Madame Butterfly born?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
    res:Madama_Butterfly text:"composer" ?x .
    ?x dbo:birthDate ?date .
}



Nodes:
	1,When		2,was		3,the		4,composer		5,of		6,the		7,opera		8,Madame		9,Butterfly		10,born	
Edges:
	1,advmod		2,auxpass		3,det		4,nsubjpass		5,case		6,det		7,compound		8,compound		9,nmod	

Parse Tree:
 (1,10)	 (2,10)	 (3,4)	 (4,10)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,4)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
309
Which street basketball player was diagnosed with Sarcoidosis?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
  ?uri rdf:type yago:StreetBasketballPlayers .
  ?uri text:"diagnosed with" text:"Sarcoidosis".
}



Nodes:
	1,Which		2,street		3,basketball		4,player		5,was		6,diagnosed		7,with		8,Sarcoidosis	
Edges:
	1,det		2,compound		3,compound		4,nsubjpass		5,auxpass		7,case		8,nmod	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,6)	 (5,6)	 (7,8)	 (8,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
310
For which movie did the daughter of Francis Ford Coppola receive an Oscar?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Francis_Ford_Coppola dbo:child ?x .
        ?x text:"receive Oscar for" ?uri .
}



Nodes:
	1,For		2,which		3,movie		4,did		5,the		6,daughter		7,of		8,Francis		9,Ford		10,Coppola		11,receive		12,an		13,Oscar	
Edges:
	1,case		2,det		3,nmod		5,det		6,nsubj		7,case		8,compound		9,compound		10,nmod		11,ccomp		12,det		13,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,6)	 (6,11)	 (7,10)	 (8,10)	 (9,10)	 (10,6)	 (11,4)	 (12,13)	 (13,11)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
311
Which city does the first person to climb all 14 eight-thousanders come from?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE {
        ?x text:"is" text:"first person to climb all fourteen eight-thousanders" .
        ?x dbo:birthPlace ?uri .
        ?uri rdf:type dbo:Settlement .
}



Nodes:
	1,Which		2,city		3,does		4,the		5,first		6,person		7,to		8,climb		9,all		10,14		11,eight-thousanders		12,come		13,from	
Edges:
	1,det		2,nsubj		4,det		5,amod		6,dobj		7,mark		8,acl		9,det		10,nummod		11,dobj		12,acl		13,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	 (7,8)	 (8,6)	 (9,11)	 (10,11)	 (11,8)	 (12,11)	 (13,12)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
312
At which college did the only American actor that received the César Award study?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string
WHERE {
        ?x text:"is" text:"the only American actor that received the César Award" .
        ?x dbo:almaMater ?uri .
}



Nodes:
	1,At		2,which		3,college		4,did		5,the		6,only		7,American		8,actor		9,that		10,received		11,the		12,César		13,Award		14,study	
Edges:
	1,case		2,det		3,nmod		5,det		6,amod		7,amod		8,dobj		9,nsubj		10,acl:relcl		11,det		12,compound		13,compound		14,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,10)	 (10,8)	 (11,14)	 (12,14)	 (13,14)	 (14,10)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
313
Did Napoleon's first wife die in France?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
        ?x text:"first wife of" text:"Napoleon" .
        ?x dbo:deathPlace res:France .  
}



Nodes:
	1,Did		2,Napoleon		3,'s		4,first		5,wife		6,die		7,in		8,France	
Edges:
	1,aux		2,nsubj		3,case		4,amod		5,dep		7,case		8,nmod	

Parse Tree:
 (1,6)	 (2,6)	 (3,2)	 (4,5)	 (5,2)	 (7,8)	 (8,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
314
How old is James Bond in the latest Bond book by William Boyd?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:James_Bond dbo:lastAppearance ?x .
        ?x dbo:author <http://dbpedia.org/resource/William_Boyd_(writer)> .
        ?x text:"age of Bond" ?n .
}



Nodes:
	1,How		2,old		3,is		4,James		5,Bond		6,in		7,the		8,latest		9,Bond		10,book		11,by		12,William		13,Boyd	
Edges:
	1,advmod		2,dep		4,compound		5,nsubj		6,case		7,det		8,amod		9,compound		10,nmod		11,case		12,compound		13,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	 (6,10)	 (7,10)	 (8,10)	 (9,10)	 (10,5)	 (11,13)	 (12,13)	 (13,10)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
315
What eating disorder is characterized by an appetite for substances such as clay and sand?


PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT ?uri WHERE
{
  ?uri rdf:type yago:EatingDisorders .
  ?uri text:"characterized by" "appetite for clay and sand" .
}



Nodes:
	1,What		2,eating		3,disorder		4,is		5,characterized		6,by		7,an		8,appetite		9,for		10,substances		11,such		12,as		13,clay		14,and		15,sand	
Edges:
	1,det		2,amod		3,nsubjpass		4,auxpass		6,case		7,det		8,nmod		9,case		10,nmod		11,case		12,mwe		13,nmod		14,cc		15,conj	

Parse Tree:
 (1,3)	 (2,3)	 (3,5)	 (4,5)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,8)	 (11,13)	 (12,11)	 (13,10)	 (14,13)	 (15,13)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
316
What is the native city of Hollywood's highest-paid actress?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE {
        ?x text:"is" text:"Hollywood's highest-paid actress" .
        ?x dbo:birthPlace ?uri .
        ?x rdf:type dbo:City .
}



Nodes:
	1,What		2,is		3,the		4,native		5,city		6,of		7,Hollywood		8,'s		9,highest-paid		10,actress	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,nmod:poss		8,case		9,amod		10,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,10)	 (7,10)	 (8,7)	 (9,10)	 (10,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
317
In which city does the former main presenter of the Xposé girls live?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?x text:"is" text:"former presenter of the Xposé girls" .
        ?x dbo:residence ?uri .



Nodes:
	1,In		2,which		3,city		4,does		5,the		6,former		7,main		8,presenter		9,of		10,the		11,Xposé		12,girls		13,live	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,amod		7,amod		8,nsubj		9,case		10,det		11,compound		12,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,13)	 (4,13)	 (5,8)	 (6,8)	 (7,8)	 (8,13)	 (9,12)	 (10,12)	 (11,12)	 (12,8)	
Head node: 13


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
318
Who plays Phileas Fogg in the adaptation of Around the World in 80 Days directed by Buzz Kulik?


PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri 
WHERE {
        ?x rdfs:label ?l .
        FILTER regex(?l,"Around the World in 80 Days","i")
        ?x dbo:director res:Buzz_Kulik .
        ?x dbo:starring ?uri .
        ?uri text:"as" text:"Phileas Fogg" .
}       



Nodes:
	1,Who		2,plays		3,Phileas		4,Fogg		5,in		6,the		7,adaptation		8,of		9,Around		10,the		11,World		12,in		13,80		14,Days		15,directed		16,by		17,Buzz		18,Kulik	
Edges:
	1,nsubj		3,compound		4,dep		5,case		6,det		7,nmod		8,case		9,case		10,det		11,nmod		12,case		13,nummod		14,nmod		15,acl		16,case		17,compound		18,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,7)	 (6,7)	 (7,11)	 (8,11)	 (9,11)	 (10,11)	 (11,2)	 (12,14)	 (13,14)	 (14,11)	 (15,14)	 (16,18)	 (17,18)	 (18,15)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2
Node#16 DUDE: 2
Node#17 DUDE: 2
Node#18 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING
Node#16 EMPTY_STRING
Node#17 EMPTY_STRING
Node#18 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
319
Who is the front man of the band that wrote Coffee & TV?


PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
        <http://dbpedia.org/page/Coffee_&_TV> dbo:musicalArtist ?x .
        ?x dbo:bandMember ?uri .
        ?uri text:"is" text:"frontman" .
}      



Nodes:
	1,Who		2,is		3,the		4,front		5,man		6,of		7,the		8,band		9,that		10,wrote		11,Coffee		12,&		13,TV	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,det		8,nmod		9,nsubj		10,acl:relcl		11,dobj		12,cc		13,conj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,8)	 (11,10)	 (12,11)	 (13,11)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
320
Which Chinese-speaking country is a former Portguese colony?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        res:Chinese_language dbo:spokenIn ?uri . 
        ?uri text:"is" text:"former Portuguese colony" . 
}



Nodes:
	1,Which		2,Chinese-speaking		3,country		4,is		5,a		6,former		7,Portguese		8,colony	
Edges:
	1,det		2,amod		3,dep		5,det		6,amod		7,compound		8,nsubj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
321
What is the largest city in the county in which Faulkner spent most of his life?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        res:William_Faulkner text:"spent most of his life in" ?x . 
        ?x dbo:largestCity ?uri . 
}



Nodes:
	1,What		2,is		3,the		4,largest		5,city		6,in		7,the		8,county		9,in		10,which		11,Faulkner		12,spent		13,most		14,of		15,his		16,life	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,det		8,nmod		9,case		10,nmod		11,nsubj		12,acl:relcl		13,dobj		14,case		15,nmod:poss		16,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	 (9,10)	 (10,12)	 (11,12)	 (12,8)	 (13,12)	 (14,16)	 (15,16)	 (16,13)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#14 DUDE: 2
Node#15 DUDE: 2
Node#16 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#14 EMPTY_STRING
Node#15 EMPTY_STRING
Node#16 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
322
In which year did the Hungarian-American actor called "The King of Horror" make his first film?


PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?year
WHERE {
        ?x rdf:type dbo:Actor .
        ?x dbo:alias "The King Of Horror" .
        ?x text:"made his first movie in" ?year .



Nodes:
	1,In		2,which		3,year		4,did		5,the		6,Hungarian-American		7,actor		8,called		10,The		11,King		12,of		13,Horror		15,make		16,his		17,first		18,film	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,amod		7,nsubj		8,acl		10,det		11,dobj		12,case		13,nmod		16,nmod:poss		17,amod		18,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,15)	 (4,15)	 (5,7)	 (6,7)	 (7,15)	 (8,7)	 (10,11)	 (11,8)	 (12,13)	 (13,11)	 (16,18)	 (17,18)	 (18,15)	
Head node: 15


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2
Node#13 DUDE: 2
Node#15 DUDE: 2
Node#16 DUDE: 2
Node#17 DUDE: 2
Node#18 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING
Node#15 EMPTY_STRING
Node#16 EMPTY_STRING
Node#17 EMPTY_STRING
Node#18 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
323
Under which pseudonym did Charles Dickens publish some of his books?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?s
WHERE { 
        ?x dbo:author res:Charles_Dickens . 
        ?x text:"published under pseudonyn" ?s . 
}



Nodes:
	1,Under		2,which		3,pseudonym		4,did		5,Charles		6,Dickens		7,publish		8,some		9,of		10,his		11,books	
Edges:
	1,case		2,det		3,nmod		4,aux		5,compound		6,nsubj		8,dobj		9,case		10,nmod:poss		11,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,7)	 (4,7)	 (5,6)	 (6,7)	 (8,7)	 (9,11)	 (10,11)	 (11,8)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================
324
A landmark of which city is the home of the Mona Lisa?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Mona_Lisa dbo:museum ?x .
        ?x text:"landmark in" ?uri .
}



Nodes:
	1,A		2,landmark		3,of		4,which		5,city		6,is		7,the		8,home		9,of		10,the		11,Mona		12,Lisa	
Edges:
	1,det		2,dep		3,case		4,det		5,nmod		7,det		8,nsubj		9,case		10,det		11,compound		12,nmod	

Parse Tree:
 (1,2)	 (2,6)	 (3,5)	 (4,5)	 (5,2)	 (7,8)	 (8,6)	 (9,12)	 (10,12)	 (11,12)	 (12,8)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin 


Slots: 


Score: 0.0




===========================================================

Parsed: 170

0
Who is the mayor of Berlin?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Berlin dbo:leaderName ?uri . 
} 



Nodes:
	1,Who		2,is		3,the		4,mayor		5,of		6,Berlin	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/leaderName
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Berlin

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Berlin> ;
         <http://dbpedia.org/ontology/leaderName>  ?v1 .
  }


===========================================================
1
In which country does the Ganges start?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Ganges dbo:sourceCountry ?uri .
} 



Nodes:
	1,In		2,which		3,country		4,does		5,the		6,Ganges		7,start	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,nsubj	

Parse Tree:
 (1,3)	 (2,3)	 (3,7)	 (4,7)	 (5,6)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Ganges
Node#7 http://dbpedia.org/ontology/sourceCountry

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Ganges> ;
         <http://dbpedia.org/ontology/sourceCountry>  ?v4 .
  }


===========================================================
4
Who was John F. Kennedy's vice president?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { res:John_F._Kennedy dbo:vicePresident ?uri . 
} 



Nodes:
	1,Who		2,was		3,John		4,F.		5,Kennedy		6,'s		7,vice		8,president	
Edges:
	2,cop		3,compound		4,compound		5,nmod:poss		6,case		7,compound		8,nsubj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,8)	 (6,5)	 (7,8)	 (8,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/John_F._Kennedy
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/vicePresident

Expansions:
Dep: 7 Head: 8

Origin slot


Slots: 
Node: 5 Argument: 1
Node: 7 Argument: 2
Node: 8 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/vicePresident>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/John_F._Kennedy> .
  }


===========================================================
5
How many students does the Free University in Amsterdam have?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?num 
WHERE { 
        res:VU_University_Amsterdam dbo:numberOfStudents ?num . 
} 



Nodes:
	1,How		2,many		3,students		4,does		5,the		6,Free		7,University		8,in		9,Amsterdam		10,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,det		6,compound		7,nsubj		8,case		9,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (3,10)	 (4,10)	 (5,7)	 (6,7)	 (7,10)	 (8,9)	 (9,7)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/VU_University_Amsterdam
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 http://dbpedia.org/ontology/numberOfStudents

Expansions:
Dep: 6 Head: 7
Dep: 8 Head: 7
Dep: 9 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/numberOfStudents>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/VU_University_Amsterdam> .
  }


===========================================================
8
When was Alberta admitted as province?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?date 
WHERE { 
        res:Alberta dbp:admittancedate ?date . 
} 



Nodes:
	1,When		2,was		3,Alberta		4,admitted		5,as		6,province	
Edges:
	1,advmod		3,nsubj		4,acl:relcl		5,case		6,nmod	

Parse Tree:
 (1,2)	 (3,2)	 (4,3)	 (5,6)	 (6,4)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 5
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Alberta
Node#4 http://dbpedia.org/property/admittancedate
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 1
Node: 5 Argument: 1
Node: 6 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/property/admittancedate>  ?v1 .}


===========================================================
9
To which countries does the Himalayan mountain system extend?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Himalayas dbp:country ?uri . 
} 



Nodes:
	1,To		2,which		3,countries		4,does		5,the		6,Himalayan		7,mountain		8,system		9,extend	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,amod		7,compound		8,nsubj	

Parse Tree:
 (1,3)	 (2,3)	 (3,9)	 (4,9)	 (5,8)	 (6,8)	 (7,8)	 (8,9)	
Head node: 9


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Himalayas
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/property/country

Expansions:

Origin node


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 8 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/property/country>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Himalayas> .
  }


===========================================================
10
Give me a list of all bandleaders that play trumpet.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:occupation res:Bandleader . 
        ?uri dbo:instrument res:Trumpet . 
} 



Nodes:
	1,Give		2,me		3,a		4,list		5,of		6,all		7,bandleaders		8,that		9,play		10,trumpet	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod		8,nsubj		9,acl:relcl		10,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	 (10,9)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 5
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 2
Node#9 DUDE: 1
Node#10 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Bandleader
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/ontology/instrument
Node#10 http://dbpedia.org/resource/Trumpet

Expansions:

Origin slot


Slots: 
Node: 8 Argument: 1
Node: 9 Argument: 1
Node: 10 Argument: 2


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Trumpet> .
    ?v1  <http://dbpedia.org/ontology/instrument>  ?v4 ;
         ?p                    <http://dbpedia.org/resource/Bandleader> .
  }


===========================================================
11
Which countries have more than ten caves?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Country . 
        ?cave rdf:type dbo:Cave . 
       ?cave dbo:location ?uri .  
      
} 
GROUP BY ?uri 
HAVING(COUNT(?cave) > 10) 



Nodes:
	1,Which		2,countries		3,have		4,more		5,than		6,ten		7,caves	
Edges:
	1,det		2,nsubj		4,advmod		5,mwe		6,nummod		7,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,4)	 (6,7)	 (7,3)	
Head node: 3


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/location
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Cave

Expansions:

Origin node


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1


Score: 0.9140271493212669


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/location>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Cave> .
  }


===========================================================
13
Who produces Orangina?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:product res:Orangina . 
}



Nodes:
	1,Who		2,produces		3,Orangina	
Edges:
	1,nsubj		3,dobj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/product
Node#3 http://dbpedia.org/resource/Orangina

Expansions:

Origin node


Slots: 
Node: 1 Argument: 1
Node: 3 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/product>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Orangina> .
  }


===========================================================
17
Give me all members of Prodigy.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:The_Prodigy dbo:bandMember ?uri . 
} 



Nodes:
	1,Give		2,me		3,all		4,members		5,of		6,Prodigy	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/bandMember
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/The_Prodigy

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/ontology/bandMember>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/The_Prodigy> .
  }


===========================================================
18
What is the longest river?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:River . 
	?uri dbo:length ?l . 

} 
ORDER BY DESC(?l) 
OFFSET 0 LIMIT 1 



Nodes:
	1,What		2,is		3,the		4,longest		5,river	
Edges:
	2,cop		3,det		4,amod		5,nsubj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/length
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/River

Expansions:

Origin node


Slots: 
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/River> ;
         <http://dbpedia.org/ontology/length>  ?v3 .
  }


===========================================================
20
Give me all cars that are produced in Germany.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Automobile . 
       ?uri dbo:assembly res:Germany .  
       
} 



Nodes:
	1,Give		2,me		3,all		4,cars		5,that		6,are		7,produced		8,in		9,Germany	
Edges:
	2,iobj		3,det		4,dobj		5,nsubjpass		6,auxpass		7,acl:relcl		8,case		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Automobile
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/assembly
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Germany

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1
Node: 6 Argument: 1
Node: 7 Argument: 2
Node: 9 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/assembly>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Automobile> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Germany> .
  }


===========================================================
22
Is proinsulin a protein?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
ASK 
WHERE { 
        res:Proinsulin rdf:type dbo:Protein . 
} 



Nodes:
	1,Is		2,proinsulin		3,a		4,protein	
Edges:
	1,cop		2,nsubj		3,det	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Proinsulin
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Protein

Expansions:

Origin node


Slots: 


Score: 1.0


ASK
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Proinsulin> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Protein> .
  }


===========================================================
23
How tall is Michael Jordan?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?num 
WHERE { 
        res:Michael_Jordan dbo:height ?num . 
} 



Nodes:
	1,How		2,tall		3,is		4,Michael		5,Jordan	
Edges:
	1,advmod		2,dep		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/height
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Michael_Jordan

Expansions:

Origin node


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/ontology/height>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Michael_Jordan> .
  }


===========================================================
24
What is the capital of Canada?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Canada dbo:capital ?uri . 
} 



Nodes:
	1,What		2,is		3,the		4,capital		5,of		6,Canada	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/capital
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Canada

Expansions:

Origin node


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/capital>  ?v4 .
  }


===========================================================
25
Who is the governor of Wyoming?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Wyoming dbp:governor ?uri . 
} 



Nodes:
	1,Who		2,is		3,the		4,governor		5,of		6,Wyoming	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/governor
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Wyoming

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Wyoming> ;
         <http://dbpedia.org/property/governor>  ?v1 .
  }


===========================================================
27
Who was the father of Queen Elizabeth II?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Elizabeth_II dbp:father ?uri . 
} 



Nodes:
	1,Who		2,was		3,the		4,father		5,of		6,Queen		7,Elizabeth		8,II	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/father
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Elizabeth_II

Expansions:
Dep: 6 Head: 8
Dep: 7 Head: 8

Origin node


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 8 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/property/father>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Elizabeth_II> .
  }


===========================================================
30
Sean Parnell is the governor of which U.S. state?

 
PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type yago:StatesOfTheUnitedStates . 
        ?uri dbp:governor res:Sean_Parnell . 
} 



Nodes:
	1,Sean		2,Parnell		3,is		4,the		5,governor		6,of		7,which		8,U.S.		9,state	
Edges:
	1,compound		2,nsubj		3,cop		4,det		6,case		7,det		8,compound		9,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,5)	 (4,5)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Sean_Parnell
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/property/governor
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/StatesOfTheUnitedStates

Expansions:
Dep: 1 Head: 2
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/governor>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Sean_Parnell> .
  }


===========================================================
31
Give me all movies directed by Francis Ford Coppola.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Film . 
        ?uri dbo:director res:Francis_Ford_Coppola . 
} 



Nodes:
	1,Give		2,me		3,all		4,movies		5,directed		6,by		7,Francis		8,Ford		9,Coppola	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,case		7,compound		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#5 http://dbpedia.org/ontology/director
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Francis_Ford_Coppola

Expansions:
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin node


Slots: 
Node: 5 Argument: 1
Node: 9 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/director>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Francis_Ford_Coppola> .
  }


===========================================================
32
Give me all actors starring in movies directed by William Shatner.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?x dbo:director res:William_Shatner . 
        ?x dbo:starring ?uri . 
} 



Nodes:
	1,Give		2,me		3,all		4,actors		5,starring		6,in		7,movies		8,directed		9,by		10,William		11,Shatner	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,case		7,nmod		8,acl		9,case		10,compound		11,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,7)	 (7,5)	 (8,7)	 (9,11)	 (10,11)	 (11,8)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/starring
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/director
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 2
Node: 7 Argument: 1


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/ontology/starring>  ?v1 ;
         <http://dbpedia.org/ontology/director>  ?v5 .
  }


===========================================================
33
Are tree frogs a type of amphibian?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
ASK 
WHERE { 
        res:Hylidae dbo:class res:Amphibian . 
} 



Nodes:
	1,Are		2,tree		3,frogs		4,a		5,type		6,of		7,amphibian	
Edges:
	2,compound		3,nsubj		4,det		5,nmod		6,case		7,nmod	

Parse Tree:
 (2,3)	 (3,1)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Hylidae
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/class###http://dbpedia.org/resource/Amphibian

Expansions:
Dep: 2 Head: 3

Origin expansion


Slots: 


Score: 1.0


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/class>  <http://dbpedia.org/resource/Amphibian> ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Hylidae> .
  }


===========================================================
35
Give me all Methodist politicians.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Politician . 
        ?uri dbo:religion res:Methodism . 
} 



Nodes:
	1,Give		2,me		3,all		4,Methodist		5,politicians	
Edges:
	2,iobj		3,det		4,amod		5,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 4
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/religion###http://dbpedia.org/resource/United_Methodist_Church
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Politician

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/religion>  <http://dbpedia.org/resource/United_Methodist_Church> .
  }


===========================================================
39
Who developed Minecraft?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Minecraft dbo:developer ?uri . 
} 



Nodes:
	1,Who		2,developed		3,Minecraft	
Edges:
	1,nsubj		3,dobj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/developer
Node#3 http://dbpedia.org/resource/Minecraft

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/developer>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Minecraft> .
  }


===========================================================
40
How many inhabitants does Maribor have?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?num 
WHERE { 
        res:Maribor dbo:populationTotal ?num . 
} 



Nodes:
	1,How		2,many		3,inhabitants		4,does		5,Maribor		6,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (3,6)	 (4,6)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/populationTotal
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Maribor
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/populationTotal>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Maribor> .
  }


===========================================================
41
Give me all companies in Munich.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Company . 
       ?uri dbo:location res:Munich .  

} 



Nodes:
	1,Give		2,me		3,all		4,companies		5,in		6,Munich	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Company
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Munich

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Munich> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Company> .
  }


===========================================================
42
How tall is Claudia Schiffer?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?height 
WHERE { 
        res:Claudia_Schiffer dbo:height ?height . 
} 



Nodes:
	1,How		2,tall		3,is		4,Claudia		5,Schiffer	
Edges:
	1,advmod		2,dep		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/height
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Claudia_Schiffer
Node#5 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/height>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Claudia_Schiffer> .
  }


===========================================================
43
List all games by GMT.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:publisher res:GMT_Games . 
} 



Nodes:
	1,List		2,all		3,games		4,by		5,GMT	
Edges:
	2,det		3,dobj		4,case		5,nmod	

Parse Tree:
 (2,3)	 (3,1)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 1
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 http://dbpedia.org/ontology/publisher
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/GMT_Games

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 1
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/publisher>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/GMT_Games> .
  }


===========================================================
44
Who founded Intel?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Intel dbo:foundedBy ?uri . 
} 



Nodes:
	1,Who		2,founded		3,Intel	
Edges:
	1,nsubj		3,dobj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/foundedBy
Node#3 http://dbpedia.org/resource/Intel

Expansions:

Origin node


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/foundedBy>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Intel> .
  }


===========================================================
45
Who is the husband of Amanda Palmer?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Amanda_Palmer dbp:spouse ?uri . 
} 



Nodes:
	1,Who		2,is		3,the		4,husband		5,of		6,Amanda		7,Palmer	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/spouse
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Amanda_Palmer

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/property/spouse>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Amanda_Palmer> .
  }


===========================================================
46
Give me all breeds of the German Shepherd dog.

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbp:breed res:German_Shepherd . 
} 



Nodes:
	1,Give		2,me		3,all		4,breeds		5,of		6,the		7,German		8,Shepherd		9,dog	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,amod		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/breed
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/German_Shepherd

Expansions:
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 1
Node: 9 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/German_Shepherd> .
    ?v4  <http://dbpedia.org/property/breed>  ?v6 .
  }


===========================================================
47
Which cities does the Weser flow through?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Weser dbo:city ?uri . 
} 



Nodes:
	1,Which		2,cities		3,does		4,the		5,Weser		6,flow		7,through	
Edges:
	1,det		2,nmod		4,det		5,compound		6,dobj		7,case	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	 (7,2)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 2
Node#7 DUDE: 5

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/city
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Weser
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/city>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Weser> .
  }


===========================================================
49
Which professional surfers were born in Australia?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:occupation res:Surfing .  
        ?uri dbo:birthPlace res:Australia . 

} 



Nodes:
	1,Which		2,professional		3,surfers		4,were		5,born		6,in		7,Australia	
Edges:
	1,det		2,amod		3,nsubjpass		4,auxpass		6,case		7,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,5)	 (4,5)	 (6,7)	 (7,5)	
Head node: 5


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/occupation###http://dbpedia.org/resource/Surfing
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/birthPlace
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Australia

Expansions:
Dep: 2 Head: 3

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/occupation>  <http://dbpedia.org/resource/Surfing> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Australia> .
    ?v4  <http://dbpedia.org/ontology/birthPlace>  ?v6 .
  }


===========================================================
51
Which other weapons did the designer of the Uzi develop?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Weapon .  
        ?uri dbp:designer ?x . 
        res:Uzi dbp:designer ?x . 
        FILTER (?uri != res:Uzi) 
} 



Nodes:
	1,Which		2,other		3,weapons		4,did		5,the		6,designer		7,of		8,the		9,Uzi		10,develop	
Edges:
	1,det		2,amod		3,dobj		4,aux		5,det		6,nsubj		7,case		8,det		9,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,10)	 (4,10)	 (5,6)	 (6,10)	 (7,9)	 (8,9)	 (9,6)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Weapon
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/property/designer
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 6 Argument: 1
Node: 9 Argument: 2


Score: 0.774074074074074


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/designer>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Weapon> .
  }


===========================================================
52
Who created Goofy?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Goofy dbo:creator ?uri . 
} 



Nodes:
	1,Who		2,created		3,Goofy	
Edges:
	1,nsubj		3,dobj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/creator
Node#3 http://dbpedia.org/resource/Goofy

Expansions:

Origin node


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/creator>  ?v6 .}


===========================================================
54
Give me all islands that belong to Japan.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Island .  
        ?uri dbo:country res:Japan . 
} 



Nodes:
	1,Give		2,me		3,all		4,islands		5,that		6,belong		7,to		8,Japan	
Edges:
	2,iobj		3,det		4,dobj		5,nsubj		6,acl:relcl		7,case		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Island
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Japan

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Japan> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Island> .
  }


===========================================================
56
What are the nicknames of San Francisco?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?string 
WHERE { 
        res:San_Francisco dbp:nickname ?string . 
} 



Nodes:
	1,What		2,are		3,the		4,nicknames		5,of		6,San		7,Francisco	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/nickname
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/San_Francisco

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/property/nickname>  ?v6 .}


===========================================================
57
Which Greek goddesses dwelt on Mount Olympus?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type yago:GreekGoddesses .  
        ?uri dbp:abode res:Mount_Olympus . 
} 



Nodes:
	1,Which		2,Greek		3,goddesses		4,dwelt		5,on		6,Mount		7,Olympus	
Edges:
	1,det		2,amod		3,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/GreekGoddesses
Node#4 http://dbpedia.org/property/abode
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Mount_Olympus

Expansions:
Dep: 2 Head: 3
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 3 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v3
WHERE
  { ?v5  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Mount_Olympus> .
    ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/GreekGoddesses> ;
         <http://dbpedia.org/property/abode>  ?v5 .
  }


===========================================================
58
When were the Hells Angels founded?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?date 
WHERE { 
        res:Hells_Angels dbp:founded ?date . 
} 



Nodes:
	1,When		2,were		3,the		4,Hells		5,Angels		6,founded	
Edges:
	1,advmod		2,auxpass		3,det		4,compound		5,nsubjpass	

Parse Tree:
 (1,6)	 (2,6)	 (3,5)	 (4,5)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Hells_Angels
Node#6 http://dbpedia.org/property/founded

Expansions:
Dep: 4 Head: 5

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Hells_Angels> ;
         <http://dbpedia.org/property/founded>  ?v4 .
  }


===========================================================
59
Give me all Apollo 14 astronauts.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:mission res:Apollo_14 . 
} 



Nodes:
	1,Give		2,me		3,all		4,Apollo		5,14		6,astronauts	
Edges:
	2,iobj		3,det		4,compound		5,nummod		6,dobj	

Parse Tree:
 (2,1)	 (3,6)	 (4,6)	 (5,6)	 (6,1)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/mission###http://dbpedia.org/resource/Apollo_14

Expansions:
Dep: 4 Head: 6
Dep: 5 Head: 6

Origin node


Slots: 


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/mission>  <http://dbpedia.org/resource/Apollo_14> .}


===========================================================
62
Give me the capitals of all countries in Africa.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?states rdf:type yago:AfricanCountries . 
        ?states dbo:capital ?uri . 
} 



Nodes:
	1,Give		2,me		3,the		4,capitals		5,of		6,all		7,countries		8,in		9,Africa	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod		8,case		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/capital
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/AfricanCountries
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:
Dep: 8 Head: 7
Dep: 9 Head: 7

Origin node


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/AfricanCountries> ;
         <http://dbpedia.org/ontology/capital>  ?v1 .
  }


===========================================================
63
Give me a list of all lakes in Denmark.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
         ?uri rdf:type dbo:Lake .  
          ?uri dbo:country res:Denmark . 

} 



Nodes:
	1,Give		2,me		3,a		4,list		5,of		6,all		7,lakes		8,in		9,Denmark	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod		8,case		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 5
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 2
Node#9 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Lake
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Denmark

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 1


Score: 0.7855325914149444


SELECT  ?v3
WHERE
  { ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Lake> ;
         ?p                    <http://dbpedia.org/resource/Denmark> .
  }


===========================================================
65
Did Socrates influence Aristotle?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
ASK 
WHERE { 
        res:Socrates dbo:influenced res:Aristotle . 
} 



Nodes:
	1,Did		2,Socrates		3,influence		4,Aristotle	
Edges:
	1,aux		2,nsubj		4,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (4,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 1
Node#4 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Socrates
Node#3 http://dbpedia.org/ontology/influenced
Node#4 http://dbpedia.org/resource/Aristotle

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 1
Node: 4 Argument: 2


Score: 1.0


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/influenced>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Aristotle> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Socrates> .
  }


===========================================================
66
Give me all Danish movies.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:Film .  
        ?uri dbo:country res:Denmark . 
} 



Nodes:
	1,Give		2,me		3,all		4,Danish		5,movies	
Edges:
	2,iobj		3,det		4,amod		5,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Denmark
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Denmark> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> .
  }


===========================================================
67
Give me all launch pads operated by NASA.

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type dbo:LaunchPad .  
        ?uri dbo:operator res:NASA . 
} 



Nodes:
	1,Give		2,me		3,all		4,launch		5,pads		6,operated		7,by		8,NASA	
Edges:
	2,iobj		3,det		4,compound		5,dobj		6,acl		7,case		8,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,5)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/LaunchPad
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/operator
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/NASA

Expansions:

Origin node


Slots: 
Node: 6 Argument: 1
Node: 8 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/LaunchPad> ;
         <http://dbpedia.org/ontology/operator>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/NASA> .
  }


===========================================================
68
Which instruments does Cat Stevens play?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Cat_Stevens dbo:instrument ?uri . 
} 



Nodes:
	1,Which		2,instruments		3,does		4,Cat		5,Stevens		6,play	
Edges:
	1,det		2,dobj		3,aux		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,6)	 (3,6)	 (4,5)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 0

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/instrument
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Cat_Stevens
Node#6 EMPTY_STRING

Expansions:
Dep: 4 Head: 5

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Cat_Stevens> ;
         <http://dbpedia.org/ontology/instrument>  ?v1 .
  }


===========================================================
71
How many employees does Google have?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?num 
WHERE { 
        res:Google dbo:numberOfEmployees ?num . 
} 



Nodes:
	1,How		2,many		3,employees		4,does		5,Google		6,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (3,6)	 (4,6)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Google
Node#6 http://dbpedia.org/ontology/numberOfEmployees

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Google> ;
         <http://dbpedia.org/ontology/numberOfEmployees>  ?v4 .
  }


===========================================================
74
Is Rita Wilson the wife of Tom Hanks?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
ASK 
WHERE { 
        res:Tom_Hanks dbo:spouse res:Rita_Wilson . 
} 



Nodes:
	1,Is		2,Rita		3,Wilson		4,the		5,wife		6,of		7,Tom		8,Hanks	
Edges:
	1,cop		2,compound		3,nsubj		4,det		6,case		7,compound		8,nmod	

Parse Tree:
 (1,5)	 (2,3)	 (3,5)	 (4,5)	 (6,8)	 (7,8)	 (8,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Rita_Wilson
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/spouse
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Tom_Hanks

Expansions:
Dep: 2 Head: 3

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 3 Argument: 2
Node: 4 Argument: 2


Score: 1.0


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Rita_Wilson> .
    ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Tom_Hanks> ;
         <http://dbpedia.org/ontology/spouse>  ?v4 .
  }


===========================================================
75
When was the Statue of Liberty built?

 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?date 
WHERE { 
        res:Statue_of_Liberty dbp:beginningDate ?date . 
} 



Nodes:
	1,When		2,was		3,the		4,Statue		5,of		6,Liberty		7,built	
Edges:
	1,advmod		2,auxpass		3,det		4,nsubjpass		5,case		6,nmod	

Parse Tree:
 (1,7)	 (2,7)	 (3,4)	 (4,7)	 (5,6)	 (6,4)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Statue_of_Liberty
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/property/beginningDate

Expansions:
Dep: 3 Head: 4
Dep: 5 Head: 4
Dep: 6 Head: 4

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/property/beginningDate>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Statue_of_Liberty> .
  }


===========================================================
78
When did Michael Jackson die?

 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?date 
WHERE { 
        res:Michael_Jackson dbo:deathDate ?date . 
} 



Nodes:
	1,When		2,did		3,Michael		4,Jackson		5,die	
Edges:
	1,advmod		2,aux		3,compound		4,nsubj	

Parse Tree:
 (1,5)	 (2,5)	 (3,4)	 (4,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Michael_Jackson
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/deathDate

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/deathDate>  ?v6 .}


===========================================================
80
List the children of Margaret Thatcher.

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Margaret_Thatcher dbo:child ?uri . 
} 



Nodes:
	1,List		2,the		3,children		4,of		5,Margaret		6,Thatcher	
Edges:
	2,det		3,dobj		4,case		5,compound		6,nmod	

Parse Tree:
 (2,3)	 (3,1)	 (4,6)	 (5,6)	 (6,3)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/child
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Margaret_Thatcher

Expansions:

Origin node


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/ontology/child>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Margaret_Thatcher> .
  }


===========================================================
82
Was Margaret Thatcher a chemist?

 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
ASK 
WHERE { 
        res:Margaret_Thatcher dbo:profession res:Chemist . 
} 



Nodes:
	1,Was		2,Margaret		3,Thatcher		4,a		5,chemist	
Edges:
	1,cop		2,compound		3,nsubj		4,det	

Parse Tree:
 (1,5)	 (2,3)	 (3,5)	 (4,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Margaret_Thatcher
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/profession###http://dbpedia.org/resource/Chemist

Expansions:
Dep: 2 Head: 3

Origin expansion


Slots: 


Score: 1.0


ASK
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Margaret_Thatcher> ;
         <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Chemist> .
  }


===========================================================
84
Which museum exhibits The Scream by Munch?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
       res:The_Scream dbo:museum ?uri .
}



Nodes:
	1,Which		2,museum		3,exhibits		4,The		5,Scream		6,by		7,Munch	
Edges:
	1,det		2,nsubj		4,det		5,dobj		6,case		7,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	 (6,7)	 (7,3)	
Head node: 3


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/museum
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/The_Scream
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/The_Scream> ;
         <http://dbpedia.org/ontology/museum>  ?v4 .
  }


===========================================================
86
Which books by Kerouac were published by Viking Press?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Book .
        ?uri dbo:publisher res:Viking_Press .
        ?uri dbo:author res:Jack_Kerouac .
}



Nodes:
	1,Which		2,books		3,by		4,Kerouac		5,were		6,published		7,by		8,Viking		9,Press	
Edges:
	1,det		2,nsubjpass		3,case		4,nmod		5,auxpass		7,case		8,amod		9,nmod	

Parse Tree:
 (1,2)	 (2,6)	 (3,4)	 (4,2)	 (5,6)	 (7,9)	 (8,9)	 (9,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Book
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/author
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Viking_Press

Expansions:
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 5 Argument: 1
Node: 9 Argument: 2


Score: 0.8175855513307985


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Book> ;
         <http://dbpedia.org/ontology/author>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Viking_Press> .
  }


===========================================================
87
Give me a list of all American inventions.


PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type yago:AmericanInventions .
}



Nodes:
	1,Give		2,me		3,a		4,list		5,of		6,all		7,American		8,inventions	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,amod		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 2
Node#8 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/AmericanInventions

Expansions:
Dep: 7 Head: 8

Origin slot


Slots: 
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/AmericanInventions> .}


===========================================================
88
How high is the Mount Everest?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
        res:Mount_Everest dbo:elevation ?num.
}



Nodes:
	1,How		2,high		3,is		4,the		5,Mount		6,Everest	
Edges:
	1,advmod		2,dep		4,det		5,compound		6,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	
Head node: 3


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/elevation
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Mount_Everest

Expansions:
Dep: 5 Head: 6

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Mount_Everest> ;
         <http://dbpedia.org/ontology/elevation>  ?v4 .
  }


===========================================================
89
Who created the comic Captain America?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Captain_America dbo:creator ?uri .
}



Nodes:
	1,Who		2,created		3,the		4,comic		5,Captain		6,America	
Edges:
	1,nsubj		3,det		4,amod		5,compound		6,dobj	

Parse Tree:
 (1,2)	 (3,6)	 (4,6)	 (5,6)	 (6,2)	
Head node: 2


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/creator
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Captain_America

Expansions:
Dep: 5 Head: 6

Origin node


Slots: 
Node: 1 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/creator>  ?v6 .}


===========================================================
91
What is the largest city in Australia?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
       res:Australia dbo:largestCity ?uri .
}



Nodes:
	1,What		2,is		3,the		4,largest		5,city		6,in		7,Australia	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/largestCity
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Australia

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 5 Argument: 2
Node: 7 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/largestCity>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Australia> .
  }


===========================================================
92
Who composed the music for Harold and Maude?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
       res:Harold_and_Maude dbo:musicComposer ?uri .
}



Nodes:
	1,Who		2,composed		3,the		4,music		5,for		6,Harold		7,and		8,Maude	
Edges:
	1,nsubj		3,det		4,dobj		5,case		6,nmod		7,cc		8,conj	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,6)	 (6,4)	 (7,6)	 (8,6)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/musicComposer
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Harold_and_Maude
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:
Dep: 7 Head: 6
Dep: 8 Head: 6

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/musicComposer>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Harold_and_Maude> .
  }


===========================================================
94
In which city was the former Dutch queen Juliana buried?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        res:Juliana_of_the_Netherlands dbo:restingPlace ?uri.
        ?uri rdf:type dbo:Settlement .
}



Nodes:
	1,In		2,which		3,city		4,was		5,the		6,former		7,Dutch		8,queen		9,Juliana		10,buried	
Edges:
	1,case		2,det		3,nmod		4,auxpass		5,det		6,amod		7,compound		8,compound		9,nsubjpass	

Parse Tree:
 (1,3)	 (2,3)	 (3,10)	 (4,10)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,10)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3
Node#10 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/City
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Juliana_of_the_Netherlands
Node#10 http://dbpedia.org/ontology/restingPlace

Expansions:
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 9 Argument: 2


Score: 0.8312499999999998


ASK
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Juliana_of_the_Netherlands> ;
         <http://dbpedia.org/ontology/restingPlace>  ?v4 .
    ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/City> .
  }


===========================================================
96
Where is the residence of the prime minister of Spain?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Prime_Minister_of_Spain dbp:residence ?uri .
}



Nodes:
	1,Where		2,is		3,the		4,residence		5,of		6,the		7,prime		8,minister		9,of		10,Spain	
Edges:
	1,advmod		3,det		4,nsubj		5,case		6,det		7,amod		8,nmod		9,case		10,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,10)	 (10,8)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3
Node#9 DUDE: 2
Node#10 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/residence
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Prime_Minister_of_Spain
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING

Expansions:
Dep: 7 Head: 8
Dep: 9 Head: 8
Dep: 10 Head: 8

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 8 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/property/residence>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Prime_Minister_of_Spain> .
  }


===========================================================
97
Which U.S. state has the abbreviation MN?


PREFIX dbp:  <http://dbpedia.org/property/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbp:postalabbreviation 'MN'@en .
}



Nodes:
	1,Which		2,U.S.		3,state		4,has		5,the		6,abbreviation		7,MN	
Edges:
	1,det		2,compound		3,nsubj		5,det		6,compound		7,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 5
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/StatesOfTheUnitedStates
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/property/postalabbreviation
Node#7 EMPTY_STRING

Expansions:
Dep: 2 Head: 3

Origin node


Slots: 
Node: 6 Argument: 1


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> ;
         <http://dbpedia.org/property/postalabbreviation>  ?v4 .
  }


===========================================================
102
Give me all B-sides of the Ramones.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE {
        ?x dbo:musicalArtist res:Ramones .
        ?x dbo:bSide ?string . 
}



Nodes:
	1,Give		2,me		3,all		4,B-sides		5,of		6,the		7,Ramones	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 1
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 http://dbpedia.org/ontology/bSide
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/musicalArtist
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Ramones

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/musicalArtist>  ?v7 ;
         <http://dbpedia.org/ontology/bSide>  ?v4 .
    ?v7  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Ramones> .
  }


===========================================================
104
Which country does the creator of Miffy come from?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Miffy dbo:creator ?x .
        ?x dbo:nationality ?uri .
}



Nodes:
	1,Which		2,country		3,does		4,the		5,creator		6,of		7,Miffy		8,come		9,from	
Edges:
	1,det		2,nmod		3,aux		4,det		5,nsubj		6,case		7,nmod		9,case	

Parse Tree:
 (1,2)	 (2,8)	 (3,8)	 (4,5)	 (5,8)	 (6,7)	 (7,5)	 (9,2)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 0
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 1
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/nationality
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Miffy
Node#8 http://dbpedia.org/ontology/creator
Node#9 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 3 Argument: 2
Node: 5 Argument: 1
Node: 9 Argument: 1


Score: 1.0


SELECT  ?v7
WHERE
  { ?v1  <http://dbpedia.org/ontology/creator>  ?v9 .
    ?v9  <http://dbpedia.org/ontology/nationality>  ?v7 .
  }


===========================================================
107
How many employees does IBM have?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?number 
WHERE {
        res:IBM dbo:numberOfEmployees ?number .
}



Nodes:
	1,How		2,many		3,employees		4,does		5,IBM		6,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (3,6)	 (4,6)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 5
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/IBM
Node#6 http://dbpedia.org/ontology/numberOfEmployees

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/IBM> ;
         <http://dbpedia.org/ontology/numberOfEmployees>  ?v4 .
  }


===========================================================
109
In which country is the Limerick Lake?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        res:Limerick_Lake dbo:country ?uri .
}



Nodes:
	1,In		2,which		3,country		4,is		5,the		6,Limerick		7,Lake	
Edges:
	1,case		2,det		3,nmod		5,det		6,compound		7,nsubj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 0
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/country
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Limerick_Lake

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 3 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/ontology/country>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Limerick_Lake> .
  }


===========================================================
110
Which television shows were created by John Cleese?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:TelevisionShow .
        ?uri dbo:creator res:John_Cleese .
}



Nodes:
	1,Which		2,television		3,shows		4,were		5,created		6,by		7,John		8,Cleese	
Edges:
	1,det		2,nsubjpass		3,dep		4,auxpass		6,case		7,compound		8,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,2)	 (4,5)	 (6,8)	 (7,8)	 (8,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/TelevisionShow
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/creator
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/John_Cleese

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 4 Argument: 1
Node: 8 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/TelevisionShow> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/John_Cleese> .
    ?v4  <http://dbpedia.org/ontology/creator>  ?v6 .
  }


===========================================================
112
In which films directed by Garry Marshall was Julia Roberts starring?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:starring res:Julia_Roberts .
        ?uri dbo:director res:Garry_Marshall .
}



Nodes:
	1,In		2,which		3,films		4,directed		5,by		6,Garry		7,Marshall		8,was		9,Julia		10,Roberts		11,starring	
Edges:
	1,case		2,det		3,nmod		5,case		6,compound		7,nmod		8,cop		9,compound		10,acl:relcl		11,acl	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	 (8,10)	 (9,10)	 (10,7)	 (11,10)	
Head node: 4


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#4 http://dbpedia.org/ontology/director
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/ontology/starring

Expansions:

Origin slot


Slots: 
Node: 11 Argument: 2


Score: 0.8416666666666667


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/director>  ?v2 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> ;
         <http://dbpedia.org/ontology/starring>  ?v5 .
  }


===========================================================
115
Give me all communist countries.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Country .
       ?uri dbo:governmentType res:Communism . 
        
}



Nodes:
	1,Give		2,me		3,all		4,communist		5,countries	
Edges:
	2,iobj		3,det		4,amod		5,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 4
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Communism
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Country

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Communism> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Country> .
  }


===========================================================
116
Which awards did Douglas Hofstadter win?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri
WHERE {
        res:Douglas_Hofstadter dbo:award ?uri .
}



Nodes:
	1,Which		2,awards		3,did		4,Douglas		5,Hofstadter		6,win	
Edges:
	1,det		2,dobj		3,aux		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,6)	 (3,6)	 (4,5)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Douglas_Hofstadter
Node#6 http://dbpedia.org/ontology/award

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 2
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Douglas_Hofstadter> ;
         <http://dbpedia.org/ontology/award>  ?v4 .
  }


===========================================================
119
What is the currency of the Czech Republic?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
       res:Czech_Republic dbo:currency ?uri .
}



Nodes:
	1,What		2,is		3,the		4,currency		5,of		6,the		7,Czech		8,Republic	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,det		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/currency
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Czech_Republic
Node#8 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 8 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/currency>  ?v6 .}


===========================================================
120
Which countries adopted the Euro?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
          ?uri rdf:type dbo:Country .
         ?uri dbo:currency res:Euro .  

}



Nodes:
	1,Which		2,countries		3,adopted		4,the		5,Euro	
Edges:
	1,det		2,nsubj		4,det		5,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 4
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Country
Node#3 http://dbpedia.org/ontology/currency
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Euro

Expansions:
Dep: 4 Head: 5

Origin node


Slots: 
Node: 2 Argument: 1
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Country> ;
         <http://dbpedia.org/ontology/currency>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Euro> .
  }


===========================================================
123
Who is the owner of Rolls-Royce?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Rolls-Royce_Motors dbo:owner ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,owner		5,of		6,Rolls-Royce	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/owner
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Rolls-Royce_Motors

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Rolls-Royce_Motors> ;
         <http://dbpedia.org/ontology/owner>  ?v1 .
  }


===========================================================
125
When did Latvia join the EU?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?date 
WHERE {       
        res:Latvia dbp:accessioneudate ?date .      
}



Nodes:
	1,When		2,did		3,Latvia		4,join		5,the		6,EU	
Edges:
	1,advmod		2,aux		3,nsubj		5,det		6,dobj	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (5,6)	 (6,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Latvia
Node#4 http://dbpedia.org/property/accessioneudate
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 1
Node: 6 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Latvia> ;
         <http://dbpedia.org/property/accessioneudate>  ?v2 .
  }


===========================================================
126
Which monarchs were married to a German?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Monarch . 
        ?uri dbo:spouse ?spouse .
       ?spouse dbo:birthPlace res:Germany. 
}



Nodes:
	1,Which		2,monarchs		3,were		4,married		5,to		6,a		7,German	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,det		7,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Monarch
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/spouse
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Germany

Expansions:

Origin node


Slots: 
Node: 2 Argument: 1
Node: 7 Argument: 2


Score: 0.857207644962747


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/spouse>  ?v6 .
    ?v6  ?p                    <http://dbpedia.org/resource/Germany> .
    ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Monarch> .
  }


===========================================================
127
When was the Battle of Gettysburg?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE { 
        res:Battle_of_Gettysburg dbo:date ?date .
}



Nodes:
	1,When		2,was		3,the		4,Battle		5,of		6,Gettysburg	
Edges:
	1,advmod		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,6)	 (6,4)	
Head node: 2


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/date
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Battle_of_Gettysburg

Expansions:

Origin node


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/date>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Battle_of_Gettysburg> .
  }


===========================================================
128
Which river does the Brooklyn Bridge cross?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {       
        res:Brooklyn_Bridge dbo:crosses ?uri . 
}



Nodes:
	1,Which		2,river		3,does		4,the		5,Brooklyn		6,Bridge		7,cross	
Edges:
	1,det		2,dobj		3,aux		4,det		5,compound		6,nsubj	

Parse Tree:
 (1,2)	 (2,7)	 (3,7)	 (4,6)	 (5,6)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Brooklyn_Bridge
Node#7 http://dbpedia.org/ontology/crosses

Expansions:
Dep: 4 Head: 6
Dep: 5 Head: 6

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Brooklyn_Bridge> ;
         <http://dbpedia.org/ontology/crosses>  ?v4 .
  }


===========================================================
130
Give me all soccer clubs in Spain.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
          ?uri rdf:type dbo:SoccerClub .
         ?uri dbo:ground res:Spain . 
}



Nodes:
	1,Give		2,me		3,all		4,soccer		5,clubs		6,in		7,Spain	
Edges:
	2,iobj		3,det		4,compound		5,dobj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/SoccerClub
Node#5 http://dbpedia.org/ontology/ground
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Spain

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 1
Node: 5 Argument: 2
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/ground>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/SoccerClub> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Spain> .
  }


===========================================================
131
What is the official language of Suriname?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE { 
        res:Suriname dbo:officialLanguage ?uri .
}



Nodes:
	1,What		2,is		3,the		4,official		5,language		6,of		7,Suriname	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/officialLanguage
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Suriname

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 2
Node: 7 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Suriname> ;
         <http://dbpedia.org/ontology/officialLanguage>  ?v2 .
  }


===========================================================
132
Who is the mayor of Tel Aviv?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE { 
        res:Tel_Aviv dbo:leaderName ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,mayor		5,of		6,Tel		7,Aviv	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/leaderName
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Tel_Aviv

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Tel_Aviv> ;
         <http://dbpedia.org/ontology/leaderName>  ?v1 .
  }


===========================================================
133
Who designed the Brooklyn Bridge?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
        res:Brooklyn_Bridge dbo:architect ?uri .
}



Nodes:
	1,Who		2,designed		3,the		4,Brooklyn		5,Bridge	
Edges:
	1,nsubj		3,det		4,compound		5,dobj	

Parse Tree:
 (1,2)	 (3,5)	 (4,5)	 (5,2)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/architect
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Brooklyn_Bridge

Expansions:
Dep: 3 Head: 5
Dep: 4 Head: 5

Origin node


Slots: 
Node: 1 Argument: 2
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Brooklyn_Bridge> ;
         <http://dbpedia.org/ontology/architect>  ?v4 .
  }


===========================================================
134
Which telecommunications organizations are located in Belgium?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT COUNT(DISTINCT ?uri)
WHERE { 	
        ?uri  rdf:type dbo:Organisation  .
       ?uri dbo:industry res:Telecommunication .  

      ?uri dbo:location res:Belgium. 
      
}



Nodes:
	1,Which		2,telecommunications		3,organizations		4,are		5,located		6,in		7,Belgium	
Edges:
	1,det		2,nsubj		3,dep		4,cop		6,case		7,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,2)	 (4,5)	 (6,7)	 (7,5)	
Head node: 5


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 4
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Telecommunication
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Organisation
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/location
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Belgium

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 4 Argument: 2
Node: 7 Argument: 2


Score: 0.857207644962747


SELECT  ?v4
WHERE
  { ?v4  ?p                    <http://dbpedia.org/resource/Telecommunication> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Organisation> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Belgium> .
    ?v4  <http://dbpedia.org/ontology/location>  ?v6 .
  }


===========================================================
136
What is the highest place of the Urals?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {       
        res:Ural_Mountains dbp:highest ?uri .  
}



Nodes:
	1,What		2,is		3,the		4,highest		5,place		6,of		7,the		8,Urals	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,det		8,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 0
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/highest
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Ural_Mountains

Expansions:
Dep: 7 Head: 8

Origin node


Slots: 
Node: 4 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/property/highest>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Ural_Mountains> .
  }


===========================================================
137
Who is the editor of Forbes?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
        res:Forbes dbo:editor ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,editor		5,of		6,Forbes	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/editor
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Forbes

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/editor>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Forbes> .
  }


===========================================================
138
Give me all companies in the advertising industry.


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT COUNT(DISTINCT ?uri)
WHERE { 
        ?uri rdf:type dbo:Company  .
       ?uri dbo:industry res:Advertising 

}



Nodes:
	1,Give		2,me		3,all		4,companies		5,in		6,the		7,advertising		8,industry	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 5
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Company
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/industry###http://dbpedia.org/resource/Advertising

Expansions:
Dep: 7 Head: 8

Origin node


Slots: 


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/Advertising> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Company> .
  }


===========================================================
140
What did Bruce Carver die from?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri
WHERE {
        res:Bruce_Carver dbo:deathCause ?uri .     
}



Nodes:
	1,What		2,did		3,Bruce		4,Carver		5,die		6,from	
Edges:
	1,nmod		2,aux		3,compound		4,nsubj		6,case	

Parse Tree:
 (1,5)	 (2,5)	 (3,4)	 (4,5)	 (6,1)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 1
Node#6 DUDE: 0

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Bruce_Carver
Node#5 http://dbpedia.org/ontology/deathCause
Node#6 EMPTY_STRING

Expansions:
Dep: 3 Head: 4

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1
Node: 4 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/deathCause>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Bruce_Carver> .
  }


===========================================================
144
Who was the wife of U.S. president Lincoln?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Abraham_Lincoln dbo:spouse ?uri.
}



Nodes:
	1,Who		2,was		3,the		4,wife		5,of		6,U.S.		7,president		8,Lincoln	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/spouse
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Abraham_Lincoln

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://dbpedia.org/ontology/spouse>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Abraham_Lincoln> .
  }


===========================================================
145
Who developed the video game World of Warcraft?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:World_of_Warcraft dbo:developer ?uri . 
}



Nodes:
	1,Who		2,developed		3,the		4,video		5,game		6,World		7,of		8,Warcraft	
Edges:
	1,nsubj		3,det		4,compound		5,compound		6,dobj		7,case		8,nmod	

Parse Tree:
 (1,2)	 (3,6)	 (4,6)	 (5,6)	 (6,2)	 (7,8)	 (8,6)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/developer
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/World_of_Warcraft
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING

Expansions:
Dep: 7 Head: 6
Dep: 8 Head: 6

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/developer>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/World_of_Warcraft> .
  }


===========================================================
146
What is the official website of Tom Cruise?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE { 
        res:Tom_Cruise dbp:website ?string .
}



Nodes:
	1,What		2,is		3,the		4,official		5,website		6,of		7,Tom		8,Cruise	
Edges:
	2,cop		3,det		4,amod		5,nsubj		6,case		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,8)	 (7,8)	 (8,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/property/website
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Tom_Cruise

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/website>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Tom_Cruise> .
  }


===========================================================
150
In which city did John F. Kennedy die?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE { 
        res:John_F._Kennedy dbo:deathPlace ?uri .
        ?uri rdf:type dbo:City .
}



Nodes:
	1,In		2,which		3,city		4,did		5,John		6,F.		7,Kennedy		8,die	
Edges:
	1,case		2,det		3,nmod		4,aux		5,compound		6,compound		7,nsubj	

Parse Tree:
 (1,3)	 (2,3)	 (3,8)	 (4,8)	 (5,7)	 (6,7)	 (7,8)	
Head node: 8


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/City
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/John_F._Kennedy
Node#8 http://dbpedia.org/ontology/deathPlace

Expansions:
Dep: 5 Head: 7
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v3
WHERE
  { ?v5  <http://dbpedia.org/ontology/deathPlace>  ?v3 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/John_F._Kennedy> .
    ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/City> .
  }


===========================================================
153
Who created Wikipedia?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Wikipedia dbo:author ?uri .
}



Nodes:
	1,Who		2,created		3,Wikipedia	
Edges:
	1,nsubj		3,dobj	

Parse Tree:
 (1,2)	 (3,2)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/author
Node#3 http://dbpedia.org/resource/Wikipedia

Expansions:

Origin node


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Wikipedia> ;
         <http://dbpedia.org/ontology/author>  ?v4 .
  }


===========================================================
154
Give me all actors starring in Last Action Hero.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Last_Action_Hero dbo:starring ?uri . 
}



Nodes:
	1,Give		2,me		3,all		4,actors		5,starring		6,in		7,Last		8,Action		9,Hero	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,case		7,amod		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 0
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/starring
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Last_Action_Hero

Expansions:
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin node


Slots: 
Node: 5 Argument: 2
Node: 9 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/ontology/starring>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Last_Action_Hero> .
  }


===========================================================
155
Which software has been developed by organizations founded in California?


PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {         
        ?uri rdf:type dbo:Software .
        ?company rdf:type dbo:Company .
        ?uri dbo:developer ?company . 
        ?company dbo:foundationPlace res:California .
   
}



Nodes:
	1,Which		2,software		3,has		4,been		5,developed		6,by		7,organizations		8,founded		9,in		10,California	
Edges:
	1,det		2,nsubjpass		3,aux		4,auxpass		6,case		7,nmod		8,acl		9,case		10,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,5)	 (4,5)	 (6,7)	 (7,5)	 (8,7)	 (9,10)	 (10,8)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 0
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 1
Node#9 DUDE: 2
Node#10 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Software
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/developer
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Company
Node#8 http://dbpedia.org/ontology/foundationPlace
Node#9 EMPTY_STRING
Node#10 http://dbpedia.org/resource/California

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 7 Argument: 2
Node: 8 Argument: 1
Node: 10 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/developer>  ?v5 .
    ?v7  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/California> .
    ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Software> .
    ?v5  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Company> ;
         <http://dbpedia.org/ontology/foundationPlace>  ?v7 .
  }


===========================================================
156
Is Christian Bale starring in Velvet Goldmine?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK
WHERE {
        res:Velvet_Goldmine dbo:starring res:Christian_Bale .
}



Nodes:
	1,Is		2,Christian		3,Bale		4,starring		5,in		6,Velvet		7,Goldmine	
Edges:
	1,aux		2,compound		3,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (1,4)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Christian_Bale
Node#4 http://dbpedia.org/ontology/starring
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Velvet_Goldmine

Expansions:
Dep: 2 Head: 3
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 3 Argument: 2


Score: 1.0


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Christian_Bale> .
    ?v1  <http://dbpedia.org/ontology/starring>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Velvet_Goldmine> .
  }


===========================================================
158
Which actors were born in Germany?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Actor .
      ?uri dbo:birthPlace res:Germany . 
}



Nodes:
	1,Which		2,actors		3,were		4,born		5,in		6,Germany	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,6)	 (6,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 0
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Actor
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/birthPlace
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Germany

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 6 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Actor> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Germany> .
    ?v4  <http://dbpedia.org/ontology/birthPlace>  ?v6 .
  }


===========================================================
161
Give me all films produced by Hal Roach.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:producer res:Hal_Roach .
}



Nodes:
	1,Give		2,me		3,all		4,films		5,produced		6,by		7,Hal		8,Roach	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,case		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,8)	 (7,8)	 (8,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#5 http://dbpedia.org/ontology/producer
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Hal_Roach
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 5 Argument: 1
Node: 8 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> ;
         <http://dbpedia.org/ontology/producer>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Hal_Roach> .
  }


===========================================================
162
Give me all video games published by Mean Hamster Software.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
      ?uri rdf:type dbo:VideoGame .
      ?uri dbo:publisher res:Mean_Hamster_Software . 
}



Nodes:
	1,Give		2,me		3,all		4,video		5,games		6,published		7,by		8,Mean		9,Hamster		10,Software	
Edges:
	2,iobj		3,det		4,compound		5,dobj		6,acl		7,case		8,compound		9,compound		10,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,5)	 (7,10)	 (8,10)	 (9,10)	 (10,6)	
Head node: 1


DUDES:
Node#1 DUDE: 4
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 3

URIS:
Node#1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/VideoGame
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/publisher
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 http://dbpedia.org/resource/Mean_Hamster_Software

Expansions:
Dep: 8 Head: 10
Dep: 9 Head: 10

Origin slot


Slots: 
Node: 4 Argument: 1
Node: 6 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/publisher>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/VideoGame> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Mean_Hamster_Software> .
  }


===========================================================
163
Which languages are spoken in Estonia?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbo:spokenIn res:Estonia . 
}



Nodes:
	1,Which		2,languages		3,are		4,spoken		5,in		6,Estonia	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,6)	 (6,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 0
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Estonia
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/spokenIn
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 1
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Estonia> .
    ?v6  <http://dbpedia.org/ontology/spokenIn>  ?v4 .
  }


===========================================================
164
How many Aldi stores are there?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?number
WHERE {
        res:Aldi dbo:numberOfLocations ?number .
}



Nodes:
	1,How		2,many		3,Aldi		4,stores		5,are		6,there	
Edges:
	1,advmod		2,amod		3,nsubj		4,dep		6,expl	

Parse Tree:
 (1,2)	 (2,3)	 (3,5)	 (4,3)	 (6,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Aldi
Node#4 http://dbpedia.org/ontology/numberOfLocations
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 4 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/numberOfLocations>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Aldi> .
  }


===========================================================
165
Which capitals in Europe were host cities of the summer olympic games?


PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type yago:CapitalsInEurope .
        ?uri rdf:type yago:HostCitiesOfTheSummerOlympicGames .
}



Nodes:
	1,Which		2,capitals		3,in		4,Europe		5,were		6,host		7,cities		8,of		9,the		10,summer		11,olympic		12,games	
Edges:
	1,det		2,dep		3,case		4,nmod		6,compound		7,nsubj		8,case		9,det		10,compound		11,amod		12,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,4)	 (4,2)	 (6,7)	 (7,5)	 (8,12)	 (9,12)	 (10,12)	 (11,12)	 (12,7)	
Head node: 5


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/CapitalsInEurope
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/HostCitiesOfTheSummerOlympicGames
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:
Dep: 3 Head: 2
Dep: 4 Head: 2
Dep: 6 Head: 7
Dep: 8 Head: 7
Dep: 9 Head: 7
Dep: 10 Head: 7
Dep: 11 Head: 7
Dep: 12 Head: 7

Origin slot


Slots: 
Node: 1 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/CapitalsInEurope> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/HostCitiesOfTheSummerOlympicGames> .
  }


===========================================================
169
Give me all books written by Danielle Steel.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Book .
        ?uri dbo:author res:Danielle_Steel .
}



Nodes:
	1,Give		2,me		3,all		4,books		5,written		6,by		7,Danielle		8,Steel	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,case		7,compound		8,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,8)	 (7,8)	 (8,5)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Book
Node#5 http://dbpedia.org/ontology/author
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Danielle_Steel

Expansions:
Dep: 7 Head: 8

Origin slot


Slots: 
Node: 4 Argument: 1
Node: 5 Argument: 1
Node: 8 Argument: 2


Score: 1.0


SELECT  ?v3
WHERE
  { ?v3  <http://dbpedia.org/ontology/author>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Danielle_Steel> .
    ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Book> .
  }


===========================================================
170
Which airports are located in California, USA?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:Airport .
       ?uri dbo:location res:California . 
}



Nodes:
	1,Which		2,airports		3,are		4,located		5,in		6,California		8,USA	
Edges:
	1,det		2,nsubj		3,cop		5,case		6,compound		8,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,8)	 (6,8)	 (8,4)	
Head node: 4


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Airport
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/location
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#8 http://dbpedia.org/resource/California

Expansions:
Dep: 6 Head: 8

Origin node


Slots: 
Node: 2 Argument: 1
Node: 8 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/California> .
    ?v4  <http://dbpedia.org/ontology/location>  ?v6 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Airport> .
  }


===========================================================
171
Which states of Germany are governed by the Social Democratic Party?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
          ?uri rdf:type yago:StatesOfGermany .
         ?uri dbo:leaderParty res:Social_Democratic_Party_of_Germany .  
}



Nodes:
	1,Which		2,states		3,of		4,Germany		5,are		6,governed		7,by		8,the		9,Social		10,Democratic		11,Party	
Edges:
	1,det		2,nsubjpass		3,case		4,nmod		5,auxpass		7,case		8,det		9,compound		10,compound		11,nmod	

Parse Tree:
 (1,2)	 (2,6)	 (3,4)	 (4,2)	 (5,6)	 (7,11)	 (8,11)	 (9,11)	 (10,11)	 (11,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/StatesOfGermany
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/ontology/leaderParty###http://dbpedia.org/resource/Social_Democratic_Party_of_Germany

Expansions:
Dep: 3 Head: 2
Dep: 4 Head: 2

Origin node


Slots: 


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/StatesOfGermany> ;
         <http://dbpedia.org/ontology/leaderParty>  <http://dbpedia.org/resource/Social_Democratic_Party_of_Germany> .
  }


===========================================================
174
In which programming language is GIMP written?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE { 
        res:GIMP dbo:programmingLanguage ?uri .
}



Nodes:
	1,In		2,which		3,programming		4,language		5,is		6,GIMP		7,written	
Edges:
	1,case		2,det		3,compound		4,nmod		5,auxpass		6,nsubjpass	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,7)	 (5,7)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/GIMP
Node#7 http://dbpedia.org/ontology/programmingLanguage

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 5 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/GIMP> ;
         <http://dbpedia.org/ontology/programmingLanguage>  ?v2 .
  }


===========================================================
175
Who produced films starring Natalie Portman?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?film rdf:type dbo:Film .
        ?film dbo:starring res:Natalie_Portman .
        ?film dbo:producer ?uri .
}



Nodes:
	1,Who		2,produced		3,films		4,starring		5,Natalie		6,Portman	
Edges:
	1,nsubj		3,dobj		4,xcomp		5,compound		6,dobj	

Parse Tree:
 (1,2)	 (3,2)	 (4,2)	 (5,6)	 (6,4)	
Head node: 2


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 4
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/producer
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#4 http://dbpedia.org/ontology/starring
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Natalie_Portman

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 6 Argument: 2


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/producer>  ?v6 .
    ?v9  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Natalie_Portman> .
    ?v1  <http://dbpedia.org/ontology/starring>  ?v9 .
  }


===========================================================
176
Give me all movies with Tom Cruise.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Film.
        ?uri dbo:starring res:Tom_Cruise .
}



Nodes:
	1,Give		2,me		3,all		4,movies		5,with		6,Tom		7,Cruise	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Tom_Cruise

Expansions:
Dep: 6 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 1


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Tom_Cruise> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> .
  }


===========================================================
177
In which films did Julia Roberts as well as Richard Gere play?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:starring res:Julia_Roberts .
        ?uri dbo:starring res:Richard_Gere.
}



Nodes:
	1,In		2,which		3,films		4,did		5,Julia		6,Roberts		7,as		8,well		9,as		10,Richard		11,Gere		12,play	
Edges:
	1,case		2,det		3,nmod		4,aux		5,compound		6,nsubj		7,advmod		8,mwe		9,case		10,compound		11,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (3,12)	 (4,12)	 (5,6)	 (6,12)	 (7,12)	 (8,7)	 (9,11)	 (10,11)	 (11,7)	
Head node: 12


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 3
Node#12 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/resource/Richard_Gere
Node#12 http://dbpedia.org/ontology/starring

Expansions:
Dep: 10 Head: 11

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 7 Argument: 2


Score: 0.9086956521739129


ASK
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Richard_Gere> .
    ?v4  <http://dbpedia.org/ontology/starring>  ?v6 .
  }


===========================================================
178
Give me all female given names.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:GivenName .
        ?uri dbo:gender res:Female .
}



Nodes:
	1,Give		2,me		3,all		4,female		5,given		6,names	
Edges:
	2,iobj		3,det		4,amod		5,amod		6,dobj	

Parse Tree:
 (2,1)	 (3,6)	 (4,6)	 (5,6)	 (6,1)	
Head node: 1


DUDES:
Node#1 DUDE: 4
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 5
Node#6 DUDE: 2

URIS:
Node#1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/GivenName
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/gender###http://dbpedia.org/resource/Female
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/GivenName> ;
         <http://dbpedia.org/ontology/gender>  <http://dbpedia.org/resource/Female> .
  }


===========================================================
179
Who wrote the book The Pillars of the Earth?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:The_Pillars_of_the_Earth dbo:author ?uri .
}



Nodes:
	1,Who		2,wrote		3,the		4,book		5,The		6,Pillars		7,of		8,the		9,Earth	
Edges:
	1,nsubj		3,det		4,iobj		5,det		6,dobj		7,case		8,det		9,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,6)	 (6,2)	 (7,9)	 (8,9)	 (9,6)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/author
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/The_Pillars_of_the_Earth
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:
Dep: 5 Head: 6
Dep: 7 Head: 6
Dep: 8 Head: 6
Dep: 9 Head: 6

Origin node


Slots: 
Node: 1 Argument: 2
Node: 4 Argument: 1
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/author>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/The_Pillars_of_the_Earth> .
  }


===========================================================
180
How many films did Leonardo DiCaprio star in?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT COUNT(DISTINCT ?uri) 
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:starring res:Leonardo_DiCaprio . 
}



Nodes:
	1,How		2,many		3,films		4,did		5,Leonardo		6,DiCaprio		7,star		8,in	
Edges:
	1,advmod		2,amod		3,nmod		5,compound		6,compound		7,dobj		8,case	

Parse Tree:
 (1,2)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	 (8,3)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 5
Node#6 DUDE: 3
Node#7 DUDE: 1
Node#8 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Film
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Leonardo_DiCaprio
Node#7 http://dbpedia.org/ontology/starring
Node#8 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 6 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Leonardo_DiCaprio> .
    ?v1  <http://dbpedia.org/ontology/starring>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Film> .
  }


===========================================================
181
Give me all soccer clubs in the Premier League.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:SoccerClub .
        ?uri dbo:league res:Premier_League . 
}



Nodes:
	1,Give		2,me		3,all		4,soccer		5,clubs		6,in		7,the		8,Premier		9,League	
Edges:
	2,iobj		3,det		4,compound		5,dobj		6,case		7,det		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (6,9)	 (7,9)	 (8,9)	 (9,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 5
Node#7 DUDE: 2
Node#8 DUDE: 4
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/SoccerClub
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/league###http://dbpedia.org/resource/Premier_League
Node#9 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/league>  <http://dbpedia.org/resource/Premier_League> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/SoccerClub> .
  }


===========================================================
182
In which U.S. state is Mount McKinley located?


PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type yago:StatesOfTheUnitedStates .
        res:Mount_McKinley dbo:locatedInArea ?uri . 
}



Nodes:
	1,In		2,which		3,U.S.		4,state		5,is		6,Mount		7,McKinley		8,located	
Edges:
	1,case		2,det		3,compound		4,nmod		5,cop		6,compound		7,nsubj	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	 (4,8)	 (5,8)	 (6,7)	 (7,8)	
Head node: 8


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/StatesOfTheUnitedStates
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Mount_McKinley
Node#8 http://dbpedia.org/ontology/locatedInArea

Expansions:
Dep: 3 Head: 4
Dep: 6 Head: 7

Origin node


Slots: 
Node: 4 Argument: 2
Node: 5 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/locatedInArea>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Mount_McKinley> .
    ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .
  }


===========================================================
183
When was Capcom founded?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
        res:Capcom dbo:foundingDate ?date .
}



Nodes:
	1,When		2,was		3,Capcom		4,founded	
Edges:
	1,advmod		2,auxpass		3,nsubjpass	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Capcom
Node#4 http://dbpedia.org/ontology/foundingDate

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/foundingDate>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Capcom> .
  }


===========================================================
187
How many inhabitants does the largest city in Canada have?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num
WHERE {
        res:Canada dbo:largestCity ?city . 
        ?city dbo:populationTotal ?num .
}



Nodes:
	1,How		2,many		3,inhabitants		4,does		5,the		6,largest		7,city		8,in		9,Canada		10,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,det		6,amod		7,nsubj		8,case		9,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (3,10)	 (4,10)	 (5,7)	 (6,7)	 (7,10)	 (8,9)	 (9,7)	
Head node: 10


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 5
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3
Node#10 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/populationTotal
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Canada
Node#10 http://dbpedia.org/ontology/largestCity

Expansions:

Origin node


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v7
WHERE
  { ?v9  <http://dbpedia.org/ontology/largestCity>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Canada> .
    ?v4  <http://dbpedia.org/ontology/populationTotal>  ?v7 .
  }


===========================================================
192
Give me all animals that are extinct.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Animal .
        ?uri dbo:conservationStatus 'EX' .
}



Nodes:
	1,Give		2,me		3,all		4,animals		5,that		6,are		7,extinct	
Edges:
	2,iobj		3,det		4,dobj		5,nsubj		6,cop		7,acl:relcl	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 5
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Animal
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/conservationStatus###Extinct

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/conservationStatus>  <Extinct> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Animal> .
  }


===========================================================
193
Does Abraham Lincoln's death place have a website?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/>
ASK
WHERE {
        res:Abraham_Lincoln dbo:deathPlace ?p .
        ?p dbp:website ?w .
        
}



Nodes:
	1,Does		2,Abraham		3,Lincoln		4,'s		5,death		6,place		7,have		8,a		9,website	
Edges:
	1,csubj		2,compound		3,nmod:poss		4,case		5,compound		6,dobj		8,det		9,dobj	

Parse Tree:
 (1,7)	 (2,3)	 (3,6)	 (4,3)	 (5,6)	 (6,1)	 (8,9)	 (9,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Abraham_Lincoln
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/deathPlace
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/property/website

Expansions:
Dep: 2 Head: 3
Dep: 5 Head: 6

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 5 Argument: 2
Node: 8 Argument: 1
Node: 9 Argument: 2


Score: 1.0


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/deathPlace>  ?v6 .
    ?v6  <http://dbpedia.org/property/website>  ?v7 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Abraham_Lincoln> .
  }


===========================================================
194
How deep is Lake Placid?


PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?n
WHERE {
        <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:depth ?n . 
}



Nodes:
	1,How		2,deep		3,is		4,Lake		5,Placid	
Edges:
	1,advmod		2,dep		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/depth
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Lake_Placid_(Texas)

Expansions:
Dep: 4 Head: 5

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Lake_Placid_(Texas)> ;
         <http://dbpedia.org/ontology/depth>  ?v4 .
  }


===========================================================
195
Give me the grandchildren of Bruce Lee.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Bruce_Lee dbo:child ?child . 
        ?child dbo:child ?uri .
}



Nodes:
	1,Give		2,me		3,the		4,grandchildren		5,of		6,Bruce		7,Lee	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 1
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 2

URIS:
Node#1 http://dbpedia.org/ontology/child
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 0.8652482269503545


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/child>  ?v4 .}


===========================================================
197
Where was Bach born?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Johann_Sebastian_Bach dbo:birthPlace ?uri .
}



Nodes:
	1,Where		2,was		3,Bach		4,born	
Edges:
	1,advmod		2,auxpass		3,nsubjpass	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 3
Node#4 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Johann_Sebastian_Bach
Node#4 http://dbpedia.org/ontology/birthPlace

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/birthPlace>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Johann_Sebastian_Bach> .
  }


===========================================================
198
In which countries can you pay using the West African CFA franc?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
         ?uri dbo:currency res:West_African_CFA_franc . 
}



Nodes:
	1,In		2,which		3,countries		4,can		5,you		6,pay		7,using		8,the		9,West		10,African		11,CFA		12,franc	
Edges:
	1,case		2,det		3,nmod		4,aux		5,nsubj		7,xcomp		8,det		9,amod		10,amod		11,compound		12,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,6)	 (4,6)	 (5,6)	 (7,6)	 (8,12)	 (9,10)	 (10,12)	 (11,12)	 (12,7)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 4
Node#11 DUDE: 2
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 http://dbpedia.org/ontology/currency###http://dbpedia.org/resource/West_African_CFA_franc
Node#11 EMPTY_STRING
Node#12 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/currency>  <http://dbpedia.org/resource/West_African_CFA_franc> .}


===========================================================
201
Does the Isar flow into a lake?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
ASK
WHERE {
        ?x dbo:inflow res:Isar .
        ?x rdf:type dbo:Lake . 
}



Nodes:
	1,Does		2,the		3,Isar		4,flow		5,into		6,a		7,lake	
Edges:
	2,det		3,compound		4,dobj		5,case		6,det		7,nmod	

Parse Tree:
 (2,4)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Isar
Node#4 http://dbpedia.org/ontology/inflow
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Lake

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2
Node: 4 Argument: 2


Score: 1.0


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Isar> .
    ?v1  <http://dbpedia.org/ontology/inflow>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Lake> .
  }


===========================================================
203
Give me all writers that won the Nobel Prize in literature.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Writer .
        ?uri dbo:award res:Nobel_Prize_in_Literature . 
}



Nodes:
	1,Give		2,me		3,all		4,writers		5,that		6,won		7,the		8,Nobel		9,Prize		10,in		11,literature	
Edges:
	2,iobj		3,det		4,dobj		5,nsubj		6,acl:relcl		7,det		8,compound		9,dobj		10,case		11,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,9)	 (8,9)	 (9,6)	 (10,11)	 (11,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 3
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Writer
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/award
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Nobel_Prize_in_Literature
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 2
Node: 6 Argument: 1
Node: 9 Argument: 2
Node: 11 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Writer> ;
         <http://dbpedia.org/ontology/award>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Nobel_Prize_in_Literature> .
  }


===========================================================
207
Give me all actors called Baldwin.


PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?uri
WHERE {
        ?uri foaf:surname 'Baldwin'@en . 
       ?uri dbo:occupation res:Actor . 
}



Nodes:
	1,Give		2,me		3,all		4,actors		5,called		6,Baldwin	
Edges:
	2,iobj		3,det		4,dobj		5,acl		6,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,5)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 1
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/occupation###http://dbpedia.org/resource/Actor
Node#5 http://xmlns.com/foaf/0.1/surname
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 5 Argument: 1
Node: 6 Argument: 2


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/occupation>  <http://dbpedia.org/resource/Actor> ;
         <http://xmlns.com/foaf/0.1/surname>  ?v3 .
  }


===========================================================
209
Which rivers flow into a German lake?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:River .
        ?x dbo:inflow ?uri .
        ?x rdf:type dbo:Lake . 
        ?x dbo:country res:Germany .
}



Nodes:
	1,Which		2,rivers		3,flow		4,into		5,a		6,German		7,lake	
Edges:
	1,det		2,nsubj		4,case		5,det		6,amod		7,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,7)	 (5,7)	 (6,7)	 (7,3)	
Head node: 3


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 4
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/River
Node#3 http://dbpedia.org/ontology/inflow
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Germany
Node#7 http://dbpedia.org/ontology/country

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 4 Argument: 1
Node: 5 Argument: 1
Node: 6 Argument: 2
Node: 7 Argument: 2


Score: 0.93687707641196


SELECT  ?v4
WHERE
  { ?v7  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Germany> .
    ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/River> .
    ?v1  <http://dbpedia.org/ontology/inflow>  ?v4 ;
         <http://dbpedia.org/ontology/country>  ?v7 .
  }


===========================================================
211
Which rockets were launched from Baikonur?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Rocket .
        ?uri dbo:launchSite res:Baikonur_Cosmodrome .
}



Nodes:
	1,Which		2,rockets		3,were		4,launched		5,from		6,Baikonur	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,nmod	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,6)	 (6,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 0
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Rocket
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/launchSite
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Baikonur_Cosmodrome

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 6 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Rocket> ;
         <http://dbpedia.org/ontology/launchSite>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Baikonur_Cosmodrome> .
  }


===========================================================
212
Which pope succeeded John Paul II?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri
WHERE {
        res:Pope_John_Paul_II dbp:successor ?uri .
}



Nodes:
	1,Which		2,pope		3,succeeded		4,John		5,Paul		6,II	
Edges:
	1,det		2,nsubj		4,compound		5,compound		6,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 1
Node#4 DUDE: 5
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Pope_John_Paul_II
Node#3 http://dbpedia.org/property/successor
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 2 Argument: 1
Node: 6 Argument: 2


Score: 1.0


SELECT  ?v6
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Pope_John_Paul_II> ;
         <http://dbpedia.org/property/successor>  ?v6 .
  }


===========================================================
213
Give me all Dutch parties.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:PoliticalParty .
        ?uri dbo:country res:Netherlands .
}



Nodes:
	1,Give		2,me		3,all		4,Dutch		5,parties	
Edges:
	2,iobj		3,det		4,amod		5,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Netherlands
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/PoliticalParty

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Netherlands> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/PoliticalParty> .
  }


===========================================================
215
Give me all Swedish oceanographers.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:field res:Oceanography . 
        ?uri dbo:birthPlace res:Sweden .        
}



Nodes:
	1,Give		2,me		3,all		4,Swedish		5,oceanographers	
Edges:
	2,iobj		3,det		4,amod		5,dobj	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,1)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Sweden
Node#5 http://dbpedia.org/ontology/field###http://dbpedia.org/resource/Oceanography

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Oceanography> ;
         ?p                    <http://dbpedia.org/resource/Sweden> .
  }


===========================================================
216
Give me all actors who were born in Berlin.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Actor .
        ?uri dbo:birthPlace res:Berlin .
}



Nodes:
	1,Give		2,me		3,all		4,actors		5,who		6,were		7,born		8,in		9,Berlin	
Edges:
	2,iobj		3,det		4,dobj		5,nsubjpass		6,auxpass		7,acl:relcl		8,case		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Actor
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/ontology/birthPlace
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Berlin

Expansions:

Origin slot


Slots: 
Node: 5 Argument: 1
Node: 9 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/birthPlace>  ?v4 ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Actor> .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Berlin> .
  }


===========================================================
222
Give me the capitals of all countries that the Himalayas run through.


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
         res:Himalayas dbp:country ?country . 
         ?country dbo:capital ?uri .
}



Nodes:
	1,Give		2,me		3,the		4,capitals		5,of		6,all		7,countries		8,that		9,the		10,Himalayas		11,run		12,through	
Edges:
	2,iobj		3,det		4,dobj		5,case		6,det		7,nmod		8,mark		9,det		10,nsubj		11,dep		12,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,11)	 (9,10)	 (10,11)	 (11,7)	 (12,11)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 1
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 1
Node#12 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/property/country
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/ontology/capital
Node#12 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 11 Argument: 2
Node: 12 Argument: 1


Score: 0.8312499999999998


ASK
WHERE
  { ?v1  <http://dbpedia.org/property/country>  ?v4 .
    ?v4  <http://dbpedia.org/ontology/capital>  ?v5 .
  }


===========================================================
223
Which actor played Chewbacca?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Chewbacca dbp:portrayer ?uri . 
}



Nodes:
	1,Which		2,actor		3,played		4,Chewbacca	
Edges:
	1,det		2,nsubj		4,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 1
Node#4 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/property/portrayer
Node#4 http://dbpedia.org/resource/Chewbacca

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/property/portrayer>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Chewbacca> .
  }


===========================================================
224
Which ingredients do I need for carrot cake?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Carrot_cake dbo:ingredient ?uri .
}



Nodes:
	1,Which		2,ingredients		3,do		4,I		5,need		6,for		7,carrot		8,cake	
Edges:
	1,det		2,dobj		3,aux		4,nsubj		6,case		7,compound		8,nmod	

Parse Tree:
 (1,2)	 (2,5)	 (3,5)	 (4,5)	 (6,8)	 (7,8)	 (8,5)	
Head node: 5


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/ingredient
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Carrot_cake

Expansions:
Dep: 7 Head: 8

Origin expansion


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/ingredient>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Carrot_cake> .
  }


===========================================================
225
Is Cola a beverage?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
ASK 
WHERE {
        res:Cola rdf:type dbo:Beverage .
}



Nodes:
	1,Is		2,Cola		3,a		4,beverage	
Edges:
	1,cop		2,nsubj		3,det	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Cola
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Beverage

Expansions:

Origin node


Slots: 


Score: 1.0


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Beverage> ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Cola> .
  }


===========================================================
226
Who has Tom Cruise been married to?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbo:spouse res:Tom_Cruise.
}



Nodes:
	1,Who		2,has		3,Tom		4,Cruise		5,been		6,married		7,to	
Edges:
	1,dep		2,aux		3,compound		4,nsubjpass		5,auxpass		7,xcomp	

Parse Tree:
 (1,6)	 (2,6)	 (3,4)	 (4,6)	 (5,6)	 (7,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Tom_Cruise
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/spouse
Node#7 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 4 Argument: 2
Node: 5 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Tom_Cruise> .
    ?v1  <http://dbpedia.org/ontology/spouse>  ?v4 .
  }


===========================================================
230
Is James Bond married?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
        res:James_Bond dbo:spouse ?uri . 
}



Nodes:
	1,Is		2,James		3,Bond		4,married	
Edges:
	1,auxpass		2,compound		3,nsubjpass	

Parse Tree:
 (1,4)	 (2,3)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/James_Bond
Node#4 http://dbpedia.org/ontology/spouse

Expansions:
Dep: 2 Head: 3

Origin expansion


Slots: 
Node: 1 Argument: 2
Node: 3 Argument: 1


Score: 1.0


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/spouse>  ?v2 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/James_Bond> .
  }


===========================================================
236
Give all swimmers that were born in Moscow.


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
         ?uri rdf:type dbo:Swimmer .
         ?uri dbo:birthPlace res:Moscow .
}



Nodes:
	1,Give		2,all		3,swimmers		4,that		5,were		6,born		7,in		8,Moscow	
Edges:
	2,iobj		3,dobj		4,nsubjpass		5,auxpass		6,acl:relcl		7,case		8,nmod	

Parse Tree:
 (2,1)	 (3,1)	 (4,6)	 (5,6)	 (6,3)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Swimmer
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/birthPlace
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Moscow

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 5 Argument: 1
Node: 6 Argument: 1
Node: 8 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Moscow> .
    ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Swimmer> ;
         <http://dbpedia.org/ontology/birthPlace>  ?v4 .
  }


===========================================================
238
Show me the book that Muhammad Ali wrote.


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
         ?uri rdf:type dbo:Book . 
         ?uri dbo:author res:Muhammad_Ali . 
}



Nodes:
	1,Show		2,me		3,the		4,book		5,that		6,Muhammad		7,Ali		8,wrote	
Edges:
	2,nsubj		3,det		4,xcomp		5,dobj		6,compound		7,nsubj		8,acl:relcl	

Parse Tree:
 (2,4)	 (3,4)	 (4,1)	 (5,8)	 (6,7)	 (7,8)	 (8,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Book
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Muhammad_Ali
Node#8 http://dbpedia.org/ontology/author

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 2
Node: 8 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/author>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Muhammad_Ali> .
    ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Book> .
  }


===========================================================
239
How many museums does Paris have?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
         ?uri rdf:type dbo:Museum . 
         ?uri dbo:location res:Paris . 
}



Nodes:
	1,How		2,many		3,museums		4,does		5,Paris		6,have	
Edges:
	1,advmod		2,amod		3,dobj		4,aux		5,nsubj	

Parse Tree:
 (1,2)	 (2,3)	 (3,6)	 (4,6)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 5
Node#5 DUDE: 4
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Museum
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Paris
Node#6 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 1


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Paris> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Museum> .
  }


===========================================================
242
Give me all the TV shows with Neil Patrick Harris.


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
         ?uri rdf:type dbo:TelevisionShow . 
         ?uri dbo:starring res:Neil_Patrick_Harris . 
}



Nodes:
	1,Give		2,me		3,all		4,the		5,TV		6,shows		7,with		8,Neil		9,Patrick		10,Harris	
Edges:
	1,csubj		2,iobj		3,det:predet		4,det		5,dobj		7,case		8,compound		9,compound		10,nmod	

Parse Tree:
 (1,6)	 (2,1)	 (3,5)	 (4,5)	 (5,1)	 (7,10)	 (8,10)	 (9,10)	 (10,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 4
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/TelevisionShow
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 http://dbpedia.org/resource/Neil_Patrick_Harris

Expansions:
Dep: 8 Head: 10
Dep: 9 Head: 10

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/TelevisionShow> ;
         ?p                    <http://dbpedia.org/resource/Neil_Patrick_Harris> .
  }


===========================================================
243
Who wrote The Hunger Games?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri
WHERE { 
        res:The_Hunger_Games dbo:author ?uri . 
}



Nodes:
	1,Who		2,wrote		3,The		4,Hunger		5,Games	
Edges:
	1,nsubj		3,det		4,compound		5,dobj	

Parse Tree:
 (1,2)	 (3,5)	 (4,5)	 (5,2)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/ontology/author
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/The_Hunger_Games

Expansions:
Dep: 3 Head: 5
Dep: 4 Head: 5

Origin node


Slots: 
Node: 1 Argument: 2
Node: 5 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/author>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/The_Hunger_Games> .
  }


===========================================================
244
Show a list of soccer clubs that play in the Bundesliga.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:SoccerClub .
        ?uri dbo:league res:Bundesliga . 
}



Nodes:
	1,Show		2,a		3,list		4,of		5,soccer		6,clubs		7,that		8,play		9,in		10,the		11,Bundesliga	
Edges:
	1,compound		2,det		4,case		5,compound		6,nmod		7,nsubj		8,acl:relcl		9,case		10,det		11,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	 (7,8)	 (8,6)	 (9,11)	 (10,11)	 (11,8)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 1
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/SoccerClub
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/ontology/league
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/resource/Bundesliga

Expansions:

Origin slot


Slots: 
Node: 7 Argument: 1
Node: 11 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Bundesliga> .
    ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/SoccerClub> ;
         <http://dbpedia.org/ontology/league>  ?v4 .
  }


===========================================================
246
Who is the founder of Penguin Books?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        res:Penguin_Books dbo:founder ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,founder		5,of		6,Penguin		7,Books	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/founder
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Penguin_Books
Node#7 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/ontology/founder>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Penguin_Books> .
  }


===========================================================
247
Which programming languages influenced Javascript?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:ProgrammingLanguage .
        ?uri dbo:influenced res:JavaScript . 
}



Nodes:
	1,Which		2,programming		3,languages		4,influenced		5,Javascript	
Edges:
	1,det		2,compound		3,nsubj		5,dobj	

Parse Tree:
 (1,3)	 (2,3)	 (3,4)	 (5,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 0
Node#4 DUDE: 1
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/ProgrammingLanguage
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/influenced
Node#5 http://dbpedia.org/resource/JavaScript

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/ProgrammingLanguage> ;
         <http://dbpedia.org/ontology/influenced>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/JavaScript> .
  }


===========================================================
248
Did Che Guevara have children?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK
WHERE { 
        res:Che_Guevara dbo:child ?uri . 
}



Nodes:
	1,Did		2,Che		3,Guevara		4,have		5,children	
Edges:
	2,compound		3,nsubj		4,ccomp		5,dobj	

Parse Tree:
 (2,3)	 (3,4)	 (4,1)	 (5,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 3
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/resource/Che_Guevara
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/child

Expansions:

Origin node


Slots: 
Node: 5 Argument: 1


Score: 1.0


ASK
WHERE
  { ?v1  <http://dbpedia.org/ontology/child>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Che_Guevara> .
  }


===========================================================
249
List all the musicals with music by Elton John.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:Musical .
        ?uri dbo:musicBy res:Elton_John .
}



Nodes:
	1,List		2,all		3,the		4,musicals		5,with		6,music		7,by		8,Elton		9,John	
Edges:
	2,det:predet		3,det		4,dobj		5,case		6,nmod		7,case		8,compound		9,nmod	

Parse Tree:
 (2,4)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,9)	 (8,9)	 (9,1)	
Head node: 1


DUDES:
Node#1 DUDE: 1
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 4
Node#7 DUDE: 2
Node#8 DUDE: 3
Node#9 DUDE: 2

URIS:
Node#1 http://dbpedia.org/ontology/musicBy
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Musical
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Elton_John
Node#9 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 4 Argument: 1
Node: 9 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Musical> ;
         <http://dbpedia.org/ontology/musicBy>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Elton_John> .
  }


===========================================================
250
Show me all the breweries in Australia.


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:Brewery .
       ?uri dbo:location res:Australia .  
}



Nodes:
	1,Show		2,me		3,all		4,the		5,breweries		6,in		7,Australia	
Edges:
	2,dep		3,det:predet		4,det		5,dep		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,5)	 (4,5)	 (5,2)	 (6,7)	 (7,1)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 2
Node#7 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Brewery
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Australia

Expansions:

Origin node


Slots: 


Score: 0.7855325914149444


SELECT  ?v1
WHERE
  { ?v1  ?p                    <http://dbpedia.org/resource/Australia> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Brewery> .
  }


===========================================================
251
When was the Titanic completed?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date
WHERE { 
        res:RMS_Titanic dbo:completionDate ?date . 
}



Nodes:
	1,When		2,was		3,the		4,Titanic		5,completed	
Edges:
	1,advmod		2,auxpass		3,det		4,nsubjpass	

Parse Tree:
 (1,5)	 (2,5)	 (3,4)	 (4,5)	
Head node: 5


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/RMS_Titanic
Node#5 http://dbpedia.org/ontology/completionDate

Expansions:
Dep: 3 Head: 4

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v6
WHERE
  { ?v1  <http://dbpedia.org/ontology/completionDate>  ?v6 .}


===========================================================
252
How much did Pulp Fiction cost?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?n
WHERE { 
        res:Pulp_Fiction dbo:budget ?n . 
}



Nodes:
	1,How		2,much		3,did		4,Pulp		5,Fiction		6,cost	
Edges:
	1,advmod		2,dep		3,aux		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,6)	 (3,6)	 (4,5)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Pulp_Fiction
Node#6 http://dbpedia.org/ontology/budget

Expansions:
Dep: 4 Head: 5

Origin slot


Slots: 
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/budget>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Pulp_Fiction> .
  }


===========================================================
254
Who played Agent Smith in Matrix?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE { 
        res:Agent_Smith dbp:portrayer ?uri . 
}



Nodes:
	1,Who		2,played		3,Agent		4,Smith		5,in		6,Matrix	
Edges:
	1,nsubj		3,compound		4,dobj		5,case		6,nmod	

Parse Tree:
 (1,2)	 (3,4)	 (4,2)	 (5,6)	 (6,4)	
Head node: 2


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 1
Node#3 DUDE: 2
Node#4 DUDE: 3
Node#5 DUDE: 2
Node#6 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/property/portrayer
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/resource/Agent_Smith
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING

Expansions:
Dep: 3 Head: 4

Origin node


Slots: 
Node: 1 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/property/portrayer>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Agent_Smith> .
  }


===========================================================
255
How much carbs does peanut butter have?


PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?carbs
WHERE { 
        res:Peanut_butter dbp:carbs ?carbs .
}



Nodes:
	1,How		2,much		3,carbs		4,does		5,peanut		6,butter		7,have	
Edges:
	1,advmod		2,amod		3,dep		4,aux		5,compound		6,nsubj	

Parse Tree:
 (1,7)	 (2,3)	 (3,1)	 (4,7)	 (5,6)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/property/carbs
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Peanut_butter
Node#7 EMPTY_STRING

Expansions:
Dep: 5 Head: 6

Origin node


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2


Score: 1.0


SELECT  ?v1
WHERE
  { ?v3  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Peanut_butter> ;
         <http://dbpedia.org/property/carbs>  ?v1 .
  }


===========================================================
257
Which bridges cross the Seine?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri
WHERE { 
        ?uri rdf:type dbo:Bridge .
        ?uri dbo:crosses res:Seine .
}



Nodes:
	1,Which		2,bridges		3,cross		4,the		5,Seine	
Edges:
	1,det		2,nsubj		4,det		5,dobj	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 4
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Bridge
Node#3 http://dbpedia.org/ontology/crosses
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Seine

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 1
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v3
WHERE
  { ?v5  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Seine> .
    ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Bridge> ;
         <http://dbpedia.org/ontology/crosses>  ?v5 .
  }


===========================================================
259
When did Dracula's creator die?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date
WHERE { 
        res:Count_Dracula dbo:creator ?x . 
        ?x dbo:deathDate ?date .
}



Nodes:
	1,When		2,did		3,Dracula		4,'s		5,creator		6,die	
Edges:
	1,advmod		2,aux		3,nmod:poss		4,case		5,nsubj	

Parse Tree:
 (1,6)	 (2,6)	 (3,5)	 (4,3)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 1
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Count_Dracula
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/creator
Node#6 http://dbpedia.org/ontology/deathDate

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 1
Node: 3 Argument: 1
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v7  <http://dbpedia.org/ontology/creator>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Count_Dracula> .
    ?v1  <http://dbpedia.org/ontology/deathDate>  ?v4 .
  }


===========================================================
260
What is the location of the Houses of Parliament?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT ?uri 
WHERE { 
         res:Palace_of_Westminster dbo:location ?uri .
}



Nodes:
	1,What		2,is		3,the		4,location		5,of		6,the		7,Houses		8,of		9,Parliament	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,det		7,nmod		8,case		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,7)	 (6,7)	 (7,4)	 (8,9)	 (9,7)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 2
Node#9 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/location
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Palace_of_Westminster
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING

Expansions:
Dep: 6 Head: 7
Dep: 8 Head: 7
Dep: 9 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 7 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/location>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Palace_of_Westminster> .
  }


===========================================================
261
Show me all English Gothic buildings in Kent.


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT ?uri 
WHERE { 
         ?uri rdf:type dbo:Building . 
         ?uri dbo:architecturalStyle res:English_Gothic_architecture .
         ?uri dbo:location res:Kent .
}



Nodes:
	1,Show		2,me		3,all		4,English		5,Gothic		6,buildings		7,in		8,Kent	
Edges:
	2,dep		3,det		4,amod		5,amod		6,dep		7,case		8,nmod	

Parse Tree:
 (2,1)	 (3,2)	 (4,6)	 (5,6)	 (6,1)	 (7,8)	 (8,6)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 4
Node#6 DUDE: 4
Node#7 DUDE: 2
Node#8 DUDE: 4

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/architecturalStyle###http://dbpedia.org/resource/English_Gothic_architecture
Node#6 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Building
Node#7 EMPTY_STRING
Node#8 http://dbpedia.org/resource/Kent

Expansions:

Origin node


Slots: 
Node: 6 Argument: 1


Score: 0.857207644962747


SELECT  ?v3
WHERE
  { ?v3  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Building> ;
         ?p                    <http://dbpedia.org/resource/Kent> ;
         <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/English_Gothic_architecture> .
  }


===========================================================
262
Who was the pope that founded the Vatican Television?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT ?uri 
WHERE { 
         ?uri rdf:type dbo:Pope . 
         res:Vatican_Television_Center dbo:foundedBy ?uri .
}



Nodes:
	1,Who		2,was		3,the		4,pope		5,that		6,founded		7,the		8,Vatican		9,Television	
Edges:
	2,cop		3,det		4,nsubj		5,nsubj		6,acl:relcl		7,det		8,compound		9,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,9)	 (8,9)	 (9,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 0
Node#6 DUDE: 1
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Pope
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/ontology/foundedBy
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/Vatican_Television_Center

Expansions:
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 5 Argument: 2
Node: 6 Argument: 2
Node: 9 Argument: 1


Score: 0.88125


SELECT  ?v3
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Pope> ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Vatican_Television_Center> ;
         <http://dbpedia.org/ontology/foundedBy>  ?v3 .
  }


===========================================================
263
What airlines are part of the SkyTeam alliance?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
          ?uri rdf:type dbo:Airline .
         ?uri dbp:alliance res:SkyTeam . 
}



Nodes:
	1,What		2,airlines		3,are		4,part		5,of		6,the		7,SkyTeam		8,alliance	
Edges:
	1,det		2,dep		4,nsubj		5,case		6,det		7,compound		8,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,3)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Airline
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/SkyTeam
Node#8 http://dbpedia.org/property/alliance

Expansions:

Origin slot


Slots: 
Node: 6 Argument: 1
Node: 7 Argument: 2
Node: 8 Argument: 1


Score: 0.9500000000000001


ASK
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Airline> ;
         <http://dbpedia.org/property/alliance>  ?v4 .
    ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/SkyTeam> .
  }


===========================================================
265
Which airports does Air China serve?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri 
WHERE {
        res:Air_China dbo:targetAirport ?uri .
}



Nodes:
	1,Which		2,airports		3,does		4,Air		5,China		6,serve	
Edges:
	1,det		2,dobj		3,aux		4,compound		5,nsubj	

Parse Tree:
 (1,2)	 (2,6)	 (3,6)	 (4,5)	 (5,6)	
Head node: 6


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 3
Node#6 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Air_China
Node#6 http://dbpedia.org/ontology/targetAirport

Expansions:
Dep: 4 Head: 5

Origin slot


Slots: 
Node: 2 Argument: 1
Node: 3 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v1  <http://dbpedia.org/ontology/targetAirport>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Air_China> .
  }


===========================================================
266
In which year was Rachel Stevens born?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri 
WHERE {
        res:Rachel_Stevens dbo:birthYear ?uri .
}



Nodes:
	1,In		2,which		3,year		4,was		5,Rachel		6,Stevens		7,born	
Edges:
	1,case		2,det		3,nmod		4,auxpass		5,compound		6,nsubjpass	

Parse Tree:
 (1,3)	 (2,3)	 (3,7)	 (4,7)	 (5,6)	 (6,7)	
Head node: 7


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 5
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Rachel_Stevens
Node#7 http://dbpedia.org/ontology/birthYear

Expansions:
Dep: 5 Head: 6

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Rachel_Stevens> ;
         <http://dbpedia.org/ontology/birthYear>  ?v4 .
  }


===========================================================
267
Where was JFK assassinated?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri 
WHERE {
        res:John_F._Kennedy dbo:deathPlace ?uri .
}



Nodes:
	1,Where		2,was		3,JFK		4,assassinated	
Edges:
	1,advmod		2,auxpass		3,nsubjpass	

Parse Tree:
 (1,4)	 (2,4)	 (3,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 3
Node#4 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/John_F._Kennedy
Node#4 http://dbpedia.org/ontology/deathPlace

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 3 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/John_F._Kennedy> ;
         <http://dbpedia.org/ontology/deathPlace>  ?v4 .
  }


===========================================================
268
How many politicians graduated from Columbia University?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT COUNT(?uri) 
WHERE {
        ?uri dbo:profession res:Politician .
        ?uri dbo:almaMater res:Columbia_University .
}



Nodes:
	1,How		2,many		3,politicians		4,graduated		5,from		6,Columbia		7,University	
Edges:
	1,advmod		2,amod		3,nsubj		5,case		6,compound		7,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (3,4)	 (5,7)	 (6,7)	 (7,4)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 2
Node#3 DUDE: 4
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/profession###http://dbpedia.org/resource/Politician
Node#4 http://dbpedia.org/ontology/almaMater
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Columbia_University
Node#7 EMPTY_STRING

Expansions:

Origin node


Slots: 
Node: 3 Argument: 1
Node: 7 Argument: 2


Score: 0.9500000000000001


ASK
WHERE
  { ?v4  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Politician> .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Columbia_University> .
    ?v4  <http://dbpedia.org/ontology/almaMater>  ?v6 .
  }


===========================================================
269
Which scientist is known for the Manhattan Project and the Nobel Peace Prize?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:knownFor res:Manhattan_Project .
        ?uri rdf:type dbo:Scientist .
        ?uri dbo:knownFor res:Nobel_Peace_Prize .
}



Nodes:
	1,Which		2,scientist		3,is		4,known		5,for		6,the		7,Manhattan		8,Project		9,and		10,the		11,Nobel		12,Peace		13,Prize	
Edges:
	1,det		2,nsubjpass		3,auxpass		5,case		6,det		7,compound		8,nmod		9,cc		10,det		11,compound		12,compound		13,conj	

Parse Tree:
 (1,2)	 (2,4)	 (3,4)	 (5,8)	 (6,8)	 (7,8)	 (8,4)	 (9,8)	 (10,13)	 (11,13)	 (12,13)	 (13,8)	
Head node: 4


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 5
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 2
Node#10 DUDE: 2
Node#11 DUDE: 4
Node#12 DUDE: 2
Node#13 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/ontology/Scientist
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 EMPTY_STRING
Node#10 EMPTY_STRING
Node#11 http://dbpedia.org/ontology/knownFor###http://dbpedia.org/resource/Norwegian_Nobel_Committee
Node#12 EMPTY_STRING
Node#13 EMPTY_STRING

Expansions:

Origin node


Slots: 


Score: 0.8610036275695284


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/ontology/Scientist> ;
         <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Norwegian_Nobel_Committee> .
  }


===========================================================
271
Which beer originated in Ireland?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/> 
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbp:type res:Beer .
        ?uri dbp:origin "Ireland"@en .
}



Nodes:
	1,Which		2,beer		3,originated		4,in		5,Ireland	
Edges:
	1,det		2,nsubj		4,case		5,nmod	

Parse Tree:
 (1,2)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 4
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 5

URIS:
Node#1 EMPTY_STRING
Node#2 http://dbpedia.org/property/type###http://dbpedia.org/resource/Beer
Node#3 http://dbpedia.org/property/origin
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING

Expansions:

Origin slot


Slots: 
Node: 4 Argument: 1


Score: 0.88125


SELECT  ?v1
WHERE
  { ?v1  <http://dbpedia.org/property/type>  <http://dbpedia.org/resource/Beer> ;
         <http://dbpedia.org/property/origin>  ?v2 .
  }


===========================================================
272
What are the specialities of the UNC Health Care?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        res:UNC_Health_Care dbp:speciality ?uri .
}



Nodes:
	1,What		2,are		3,the		4,specialities		5,of		6,the		7,UNC		8,Health		9,Care	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,det		7,compound		8,compound		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/property/speciality
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/UNC_Health_Care

Expansions:
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 9 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://dbpedia.org/property/speciality>  ?v1 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/UNC_Health_Care> .
  }


===========================================================
273
Who is the owner of Facebook?


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        res:Facebook dbo:foundedBy ?uri .
}



Nodes:
	1,Who		2,is		3,the		4,owner		5,of		6,Facebook	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	
Head node: 1


DUDES:
Node#1 DUDE: 5
Node#2 DUDE: 2
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/foundedBy
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Facebook

Expansions:

Origin slot


Slots: 
Node: 3 Argument: 1
Node: 4 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Facebook> ;
         <http://dbpedia.org/ontology/foundedBy>  ?v1 .
  }


===========================================================
275
Who was influenced by Socrates?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:influencedBy res:Socrates .
}



Nodes:
	1,Who		2,was		3,influenced		4,by		5,Socrates	
Edges:
	1,nsubjpass		2,auxpass		4,case		5,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (4,5)	 (5,3)	
Head node: 3


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/influencedBy
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/resource/Socrates

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 5 Argument: 2


Score: 1.0


SELECT  ?v4
WHERE
  { ?v4  <http://dbpedia.org/ontology/influencedBy>  ?v6 .
    ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Socrates> .
  }


===========================================================
277
Give me English actors starring in Lovesick.


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX yago: <http://dbpedia.org/class/yago/> 
SELECT DISTINCT ?uri
WHERE {
          res:Lovesick dbo:starring ?uri .
         ?uri dbo:birthPlace res:England . 
}



Nodes:
	1,Give		2,me		3,English		4,actors		5,starring		6,in		7,Lovesick	
Edges:
	2,iobj		3,amod		4,dobj		5,acl		6,case		7,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,4)	 (6,7)	 (7,5)	
Head node: 1


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 1
Node#5 DUDE: 1
Node#6 DUDE: 2
Node#7 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/England
Node#4 http://dbpedia.org/ontology/birthPlace
Node#5 http://dbpedia.org/ontology/starring
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Lovesick

Expansions:

Origin node


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 1
Node: 5 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v5  <http://dbpedia.org/ontology/starring>  ?v1 .
    ?v1  <http://dbpedia.org/ontology/birthPlace>  ?v3 .
    ?v5  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Lovesick> .
    ?v3  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/England> .
  }


===========================================================
278
Give me all types of eating disorders.


PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE { 
         ?uri rdf:type yago:EatingDisorders .
}



Nodes:
	1,Give		2,me		3,all		4,types		5,of		6,eating		7,disorders	
Edges:
	2,iobj		3,det		4,dobj		5,mark		6,acl		7,dobj	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,6)	 (6,4)	 (7,6)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 4
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type###http://dbpedia.org/class/yago/EatingDisorders
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING

Expansions:
Dep: 5 Head: 4
Dep: 6 Head: 4
Dep: 7 Head: 4

Origin slot


Slots: 
Node: 2 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://dbpedia.org/class/yago/EatingDisorders> .}


===========================================================
279
Who was married to president Chirac?


PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri
WHERE { 
         res:Jacques_Chirac dbo:spouse ?uri .
}



Nodes:
	1,Who		2,was		3,married		4,to		5,president		6,Chirac	
Edges:
	1,nsubjpass		2,auxpass		4,case		5,compound		6,nmod	

Parse Tree:
 (1,3)	 (2,3)	 (4,6)	 (5,6)	 (6,3)	
Head node: 3


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 1
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/ontology/spouse
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 http://dbpedia.org/resource/Jacques_Chirac

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 1
Node: 2 Argument: 2
Node: 6 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Jacques_Chirac> ;
         <http://dbpedia.org/ontology/spouse>  ?v4 .
  }


===========================================================
282
Where did Hillel Slovak die?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri
WHERE {
        res:Hillel_Slovak dbo:deathPlace ?uri .
}



Nodes:
	1,Where		2,did		3,Hillel		4,Slovak		5,die	
Edges:
	1,advmod		2,aux		3,compound		4,nsubj	

Parse Tree:
 (1,5)	 (2,5)	 (3,4)	 (4,5)	
Head node: 5


DUDES:
Node#1 DUDE: 0
Node#2 DUDE: 2
Node#3 DUDE: 3
Node#4 DUDE: 2
Node#5 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 http://dbpedia.org/resource/Hillel_Slovak
Node#4 EMPTY_STRING
Node#5 http://dbpedia.org/ontology/deathPlace

Expansions:

Origin slot


Slots: 
Node: 1 Argument: 2
Node: 2 Argument: 2
Node: 4 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Hillel_Slovak> ;
         <http://dbpedia.org/ontology/deathPlace>  ?v4 .
  }


===========================================================
283
What is the timezone in San Pedro de Atacama?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/timezone/> 
SELECT DISTINCT ?uri
WHERE {
        res:San_Pedro_de_Atacama dbo:timezone ?uri .
}



Nodes:
	1,What		2,is		3,the		4,timezone		5,in		6,San		7,Pedro		8,de		9,Atacama	
Edges:
	2,cop		3,det		4,nsubj		5,case		6,compound		7,compound		8,amod		9,nmod	

Parse Tree:
 (2,1)	 (3,4)	 (4,1)	 (5,9)	 (6,9)	 (7,9)	 (8,9)	 (9,4)	
Head node: 1


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 0
Node#3 DUDE: 2
Node#4 DUDE: 1
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 2
Node#8 DUDE: 2
Node#9 DUDE: 3

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 http://dbpedia.org/ontology/timezone
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 EMPTY_STRING
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/resource/San_Pedro_de_Atacama

Expansions:
Dep: 6 Head: 9
Dep: 7 Head: 9
Dep: 8 Head: 9

Origin slot


Slots: 
Node: 4 Argument: 2
Node: 9 Argument: 1


Score: 1.0


SELECT  ?v1
WHERE
  { ?v4  <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/San_Pedro_de_Atacama> ;
         <http://dbpedia.org/ontology/timezone>  ?v1 .
  }


===========================================================
284
In which city does the Chile Route 68 end?


PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT DISTINCT ?uri
WHERE {
        res:Chile_Route_68 dbo:routeEnd ?uri .
}



Nodes:
	1,In		2,which		3,city		4,does		5,the		6,Chile		7,Route		8,68		9,end	
Edges:
	1,case		2,det		3,nmod		4,aux		5,det		6,compound		7,nsubj		8,dep	

Parse Tree:
 (1,3)	 (2,3)	 (3,9)	 (4,9)	 (5,7)	 (6,7)	 (7,9)	 (8,7)	
Head node: 9


DUDES:
Node#1 DUDE: 2
Node#2 DUDE: 5
Node#3 DUDE: 2
Node#4 DUDE: 2
Node#5 DUDE: 2
Node#6 DUDE: 2
Node#7 DUDE: 3
Node#8 DUDE: 2
Node#9 DUDE: 1

URIS:
Node#1 EMPTY_STRING
Node#2 EMPTY_STRING
Node#3 EMPTY_STRING
Node#4 EMPTY_STRING
Node#5 EMPTY_STRING
Node#6 EMPTY_STRING
Node#7 http://dbpedia.org/resource/Chile_Route_68
Node#8 EMPTY_STRING
Node#9 http://dbpedia.org/ontology/routeEnd

Expansions:
Dep: 6 Head: 7
Dep: 8 Head: 7

Origin slot


Slots: 
Node: 3 Argument: 2
Node: 4 Argument: 2
Node: 7 Argument: 1


Score: 1.0


SELECT  ?v4
WHERE
  { ?v6  <http://dbpedia.org/ontology/routeEnd>  ?v4 ;
         <http://www.w3.org/2002/07/owl#sameAs>  <http://dbpedia.org/resource/Chile_Route_68> .
  }


===========================================================

Parsed correctly: 3120/325